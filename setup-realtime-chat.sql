-- =====================================================
-- Real-time Chat Setup Script for Supabase
-- =====================================================
-- Run this script in your Supabase SQL Editor
-- Make sure to enable Realtime for the messages table after running this script

-- Step 1: Create the messages table for global chat
DO $$
BEGIN
    -- Check if table exists
    IF NOT EXISTS (SELECT FROM information_schema.tables WHERE table_name = 'messages') THEN
        CREATE TABLE messages (
            id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            username VARCHAR NOT NULL,
            text TEXT NOT NULL,
            country VARCHAR,
            is_authenticated BOOLEAN DEFAULT FALSE,
            timestamp timestamp default now() NOT NULL
        );
        RAISE NOTICE 'Messages table created successfully!';
    ELSE
        RAISE NOTICE 'Messages table already exists.';
    END IF;
END $$;

-- Step 2: Enable Row Level Security (RLS)
ALTER TABLE messages ENABLE ROW LEVEL SECURITY;

-- Step 3: Drop existing policies if they exist (to avoid conflicts)
DROP POLICY IF EXISTS "Anyone can read messages" ON messages;
DROP POLICY IF EXISTS "Anyone can insert messages" ON messages;
DROP POLICY IF EXISTS "Users can update their own messages" ON messages;
DROP POLICY IF EXISTS "Users can delete their own messages" ON messages;

-- Step 4: Create RLS policies for messages table
-- Allow everyone to read messages (public chat)
CREATE POLICY "Anyone can read messages" ON messages
    FOR SELECT USING (true);

-- Allow everyone to insert messages (public chat)
CREATE POLICY "Anyone can insert messages" ON messages
    FOR INSERT WITH CHECK (true);

-- Allow users to update their own messages (optional)
CREATE POLICY "Users can update their own messages" ON messages
    FOR UPDATE USING (true);

-- Allow users to delete their own messages (optional)
CREATE POLICY "Users can delete their own messages" ON messages
    FOR DELETE USING (true);

-- Step 5: Create indexes for better performance
CREATE INDEX IF NOT EXISTS idx_messages_timestamp ON messages(timestamp DESC);
CREATE INDEX IF NOT EXISTS idx_messages_username ON messages(username);
CREATE INDEX IF NOT EXISTS idx_messages_country ON messages(country);
CREATE INDEX IF NOT EXISTS idx_messages_auth ON messages(is_authenticated);

-- Step 6: Enable realtime for the messages table
-- Note: This adds the table to the realtime publication
DO $$
BEGIN
    -- Check if table is already in realtime publication
    IF NOT EXISTS (
        SELECT 1 FROM pg_publication_tables
        WHERE pubname = 'supabase_realtime'
        AND tablename = 'messages'
    ) THEN
        ALTER PUBLICATION supabase_realtime ADD TABLE messages;
        RAISE NOTICE 'Messages table added to realtime publication!';
    ELSE
        RAISE NOTICE 'Messages table already in realtime publication.';
    END IF;
END $$;

-- Production ready - no sample data inserted

-- Step 8: Verification queries
SELECT
    'Setup Complete!' as status,
    COUNT(*) as total_messages,
    COUNT(CASE WHEN is_authenticated THEN 1 END) as authenticated_messages,
    COUNT(DISTINCT country) as unique_countries
FROM messages;

-- Check if realtime is enabled
SELECT
    schemaname,
    tablename,
    'Realtime enabled' as realtime_status
FROM pg_publication_tables
WHERE pubname = 'supabase_realtime'
AND tablename = 'messages';

-- Show table structure
SELECT
    column_name,
    data_type,
    is_nullable,
    column_default
FROM information_schema.columns
WHERE table_name = 'messages'
ORDER BY ordinal_position;

-- =====================================================
-- IMPORTANT: Manual Steps Required
-- =====================================================
-- After running this script, you MUST:
-- 1. Go to Database â†’ Replication in your Supabase dashboard
-- 2. Find the 'messages' table
-- 3. Toggle "Enable Realtime" to ON
-- 4. The toggle should show as enabled for real-time to work
-- =====================================================
