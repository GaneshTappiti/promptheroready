{"version":3,"file":"static/js/2096.a56bd4e0.chunk.js","mappings":"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","sources":["components/prompting/PromptGuide.tsx","components/ui/ai-response.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport AIResponse from '@/components/ui/ai-response';\r\n\r\nconst PromptGuide: React.FC = () => {\r\n  const promptExamples = {\r\n    poor: `Write a business plan`,\r\n    \r\n    good: `I am a first-time entrepreneur launching a SaaS product. Write a comprehensive business plan for a project management tool targeting small businesses with 10-50 employees. Include market analysis, competitive landscape, revenue projections for the first 3 years, and go-to-market strategy. Format as a structured document with clear sections and bullet points where appropriate.`\r\n  };\r\n\r\n  const frameworkExample = `# Effective AI Prompt Framework\r\n\r\n## Four Key Components\r\n\r\n### 1. Persona\r\nDefine who you are and your role. This provides context for the AI to understand your perspective and needs.\r\n\r\n**Example:** \"I am a startup founder in the fintech space\" or \"I am a product manager at a B2B SaaS company\"\r\n\r\n### 2. Task\r\nClearly state what you want the AI to do. Be specific about the desired outcome.\r\n\r\n**Example:** \"Analyze the competitive landscape\" or \"Create a go-to-market strategy\"\r\n\r\n### 3. Context\r\nProvide relevant background information, constraints, and specific details.\r\n\r\n**Example:** \"For a mobile payment app targeting millennials in urban areas with a budget of $50,000 for initial marketing\"\r\n\r\n### 4. Format\r\nSpecify how you want the response structured and delivered.\r\n\r\n**Example:** \"Present as a table with pros and cons\" or \"Write in bullet points under 500 words\"\r\n\r\n## Prompt Structure Template\r\n\r\n**Persona:** I am [your role/position]\r\n**Task:** [Specific action you want performed]\r\n**Context:** [Relevant background, constraints, specifics]\r\n**Format:** [How you want the response structured]\r\n\r\n## Example Application\r\n\r\n**Poor Prompt:**\r\n\"Help me with marketing\"\r\n\r\n**Improved Prompt:**\r\n\"I am a B2B SaaS founder launching an AI-powered customer service platform. Create a comprehensive marketing strategy targeting mid-market companies with 100-500 employees who currently use traditional helpdesk software. Focus on digital channels with a monthly budget of $10,000. Present the strategy as a 90-day action plan with specific tactics, timelines, and success metrics.\"`;\r\n\r\n  const startupPrompts = `# Startup-Specific Prompt Templates\r\n\r\n## Market Research\r\nI am a [industry] entrepreneur validating a business idea. Analyze the market opportunity for [specific product/service] targeting [specific customer segment]. Research market size, growth trends, key players, and potential barriers to entry. Present findings in a structured report with data sources and actionable insights.\r\n\r\n## Competitive Analysis\r\nI am launching [product description] in the [industry] space. Conduct a comprehensive competitive analysis of [3-5 specific competitors]. Compare features, pricing, market positioning, strengths, and weaknesses. Identify market gaps and differentiation opportunities. Format as a comparison table with strategic recommendations.\r\n\r\n## MVP Planning\r\nI am a technical founder building [product description]. Help me define the minimum viable product scope for [target customer]. Prioritize features based on customer value and development complexity. Create a feature roadmap for the first 6 months with clear milestones and success criteria.\r\n\r\n## Fundraising Strategy\r\nI am a startup founder seeking [funding stage] investment for [business description]. Develop a fundraising strategy including investor targeting, pitch deck outline, financial projections, and timeline. Focus on [specific industry/stage] investors who invest in [company stage/size]. Present as an actionable 3-month plan.\r\n\r\n## Go-to-Market Strategy\r\nI am launching [product] for [target market]. Create a go-to-market strategy covering customer acquisition channels, pricing strategy, sales process, and marketing tactics. Budget is [amount] over [timeframe]. Include specific metrics and KPIs to track success.`;\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto p-6 space-y-6\">\r\n      <div className=\"text-center mb-8\">\r\n        <h1 className=\"text-3xl font-bold mb-2\">AI Prompting Guide for Startups</h1>\r\n        <p className=\"text-muted-foreground\">\r\n          Learn to write effective prompts that generate better AI responses for your startup needs\r\n        </p>\r\n      </div>\r\n\r\n      <Tabs defaultValue=\"framework\" className=\"w-full\">\r\n        <TabsList className=\"grid w-full grid-cols-4\">\r\n          <TabsTrigger value=\"framework\">Framework</TabsTrigger>\r\n          <TabsTrigger value=\"examples\">Examples</TabsTrigger>\r\n          <TabsTrigger value=\"templates\">Templates</TabsTrigger>\r\n          <TabsTrigger value=\"tips\">Best Practices</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"framework\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>The Four-Component Framework</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <AIResponse \r\n                content={frameworkExample}\r\n                variant=\"default\"\r\n                showCopyButton={true}\r\n                className=\"border-0\"\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"examples\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"text-red-600\">Ineffective Prompt</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"bg-red-50 dark:bg-red-950/20 p-4 rounded border border-red-200 dark:border-red-800\">\r\n                  <code className=\"text-sm\">{promptExamples.poor}</code>\r\n                </div>\r\n                <div className=\"mt-4 text-sm text-muted-foreground\">\r\n                  <p><strong>Problems:</strong></p>\r\n                  <ul className=\"list-disc pl-5 space-y-1\">\r\n                    <li>No persona or context</li>\r\n                    <li>Vague task description</li>\r\n                    <li>No format specification</li>\r\n                    <li>Too broad and unfocused</li>\r\n                  </ul>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"text-green-600\">Effective Prompt</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"bg-green-50 dark:bg-green-950/20 p-4 rounded border border-green-200 dark:border-green-800\">\r\n                  <code className=\"text-sm\">{promptExamples.good}</code>\r\n                </div>\r\n                <div className=\"mt-4 text-sm text-muted-foreground\">\r\n                  <p><strong>Strengths:</strong></p>\r\n                  <ul className=\"list-disc pl-5 space-y-1\">\r\n                    <li>Clear persona and experience level</li>\r\n                    <li>Specific task and deliverable</li>\r\n                    <li>Detailed context and constraints</li>\r\n                    <li>Defined format and structure</li>\r\n                  </ul>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"templates\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Ready-to-Use Startup Prompts</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <AIResponse \r\n                content={startupPrompts}\r\n                variant=\"default\"\r\n                showCopyButton={true}\r\n                className=\"border-0\"\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"tips\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Writing Guidelines</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div>\r\n                  <h4 className=\"font-medium mb-2\">Use Natural Language</h4>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    Write prompts as if you're having a conversation. Use everyday speech patterns and clear, direct language.\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"font-medium mb-2\">Be Specific</h4>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    Provide clear, detailed instructions. Specify exactly what you want rather than leaving it open-ended.\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"font-medium mb-2\">Stay Concise</h4>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    Include essential details but avoid unnecessary words. Long, rambling prompts can confuse AI tools.\r\n                  </p>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Refinement Strategies</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div>\r\n                  <h4 className=\"font-medium mb-2\">Iterate and Improve</h4>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    If results aren't what you expected, refine your prompt. Add context, clarify instructions, or adjust the format.\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"font-medium mb-2\">Test Different Approaches</h4>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    Try rephrasing your prompts in different ways to see what works best for your specific use case.\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"font-medium mb-2\">Build on Responses</h4>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    Use AI responses as starting points. Ask follow-up questions or request specific improvements to refine the output.\r\n                  </p>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PromptGuide;\r\n","import React, { useState } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport remarkGfm from 'remark-gfm';\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport { oneDark, oneLight } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\nimport { cn } from '@/lib/utils';\r\nimport { Copy, Check, ExternalLink, Code, Palette, Smartphone, Monitor, Zap } from 'lucide-react';\r\nimport { Button } from './button';\r\nimport { Badge } from './badge';\r\nimport { useTheme } from 'next-themes';\r\nimport { useToast } from '@/hooks/use-toast';\r\n\r\ninterface AIResponseProps {\r\n  content: string;\r\n  className?: string;\r\n  showCopyButton?: boolean;\r\n  variant?: 'default' | 'compact' | 'chat' | 'tool-specific';\r\n  title?: string;\r\n  toolType?: 'framer' | 'flutterflow' | 'uizard' | 'cursor' | 'lovable' | 'general';\r\n  showToolButtons?: boolean;\r\n  metadata?: {\r\n    appType?: string;\r\n    uiStyle?: string;\r\n    complexity?: 'simple' | 'medium' | 'complex';\r\n    estimatedTime?: string;\r\n  };\r\n}\r\n\r\nconst AIResponse: React.FC<AIResponseProps> = ({\r\n  content,\r\n  className,\r\n  showCopyButton = true,\r\n  variant = 'default',\r\n  title,\r\n  toolType = 'general',\r\n  showToolButtons = false,\r\n  metadata\r\n}) => {\r\n  const [copied, setCopied] = useState(false);\r\n  const [copiedSection, setCopiedSection] = useState<string | null>(null);\r\n  const { theme } = useTheme();\r\n  const { toast } = useToast();\r\n\r\n  const handleCopy = async (text: string = content, label: string = 'Content') => {\r\n    try {\r\n      await navigator.clipboard.writeText(text);\r\n      setCopied(true);\r\n      setTimeout(() => setCopied(false), 2000);\r\n\r\n      toast({\r\n        title: \"Copied!\",\r\n        description: `${label} copied to clipboard`,\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to copy text:', error);\r\n      toast({\r\n        title: \"Copy Failed\",\r\n        description: \"Could not copy to clipboard\",\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const getToolIcon = (tool: string) => {\r\n    switch (tool) {\r\n      case 'framer':\r\n        return <Monitor className=\"h-4 w-4\" />;\r\n      case 'flutterflow':\r\n        return <Smartphone className=\"h-4 w-4\" />;\r\n      case 'uizard':\r\n        return <Palette className=\"h-4 w-4\" />;\r\n      case 'cursor':\r\n        return <Code className=\"h-4 w-4\" />;\r\n      case 'lovable':\r\n        return <Zap className=\"h-4 w-4\" />;\r\n      default:\r\n        return <Code className=\"h-4 w-4\" />;\r\n    }\r\n  };\r\n\r\n  const getToolColor = (tool: string) => {\r\n    switch (tool) {\r\n      case 'framer':\r\n        return 'bg-blue-600/20 text-blue-400 border-blue-600/30';\r\n      case 'flutterflow':\r\n        return 'bg-purple-600/20 text-purple-400 border-purple-600/30';\r\n      case 'uizard':\r\n        return 'bg-green-600/20 text-green-400 border-green-600/30';\r\n      case 'cursor':\r\n        return 'bg-yellow-600/20 text-yellow-400 border-yellow-600/30';\r\n      case 'lovable':\r\n        return 'bg-pink-600/20 text-pink-400 border-pink-600/30';\r\n      default:\r\n        return 'bg-gray-600/20 text-gray-400 border-gray-600/30';\r\n    }\r\n  };\r\n\r\n  const baseStyles = {\r\n    default: \"prose prose-sm max-w-none dark:prose-invert\",\r\n    compact: \"prose prose-xs max-w-none dark:prose-invert\",\r\n    chat: \"prose prose-sm max-w-none dark:prose-invert prose-p:my-2 prose-headings:my-2\"\r\n  };\r\n\r\n  return (\r\n    <div className={cn(\"relative group bg-card border rounded-lg p-4\", className)}>\r\n      {(title || metadata || toolType !== 'general') && (\r\n        <div className=\"flex items-center justify-between mb-4 pb-2 border-b\">\r\n          <div className=\"flex items-center gap-3\">\r\n            {toolType !== 'general' && getToolIcon(toolType)}\r\n            <div>\r\n              {title && <h4 className=\"font-semibold text-foreground\">{title}</h4>}\r\n              {metadata && (\r\n                <div className=\"flex items-center gap-2 mt-1\">\r\n                  {metadata.appType && (\r\n                    <Badge variant=\"outline\" className=\"text-xs\">\r\n                      {metadata.appType}\r\n                    </Badge>\r\n                  )}\r\n                  {metadata.uiStyle && (\r\n                    <Badge variant=\"outline\" className=\"text-xs\">\r\n                      {metadata.uiStyle}\r\n                    </Badge>\r\n                  )}\r\n                  {metadata.complexity && (\r\n                    <Badge\r\n                      variant=\"outline\"\r\n                      className={cn(\r\n                        \"text-xs\",\r\n                        metadata.complexity === 'complex' ? 'bg-red-600/20 text-red-400' :\r\n                        metadata.complexity === 'medium' ? 'bg-yellow-600/20 text-yellow-400' :\r\n                        'bg-green-600/20 text-green-400'\r\n                      )}\r\n                    >\r\n                      {metadata.complexity}\r\n                    </Badge>\r\n                  )}\r\n                  {metadata.estimatedTime && (\r\n                    <Badge variant=\"outline\" className=\"text-xs\">\r\n                      ⏱️ {metadata.estimatedTime}\r\n                    </Badge>\r\n                  )}\r\n                  {toolType !== 'general' && (\r\n                    <Badge\r\n                      variant=\"outline\"\r\n                      className={cn(\"text-xs\", getToolColor(toolType))}\r\n                    >\r\n                      {toolType}\r\n                    </Badge>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {showCopyButton && (\r\n            <Button\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              onClick={() => handleCopy(content, title || 'AI Response')}\r\n              className=\"h-8\"\r\n            >\r\n              {copied ? (\r\n                <>\r\n                  <Check className=\"h-4 w-4 text-green-500 mr-1\" />\r\n                  Copied!\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Copy className=\"h-4 w-4 mr-1\" />\r\n                  Copy All\r\n                </>\r\n              )}\r\n            </Button>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {!title && showCopyButton && (\r\n        <Button\r\n          variant=\"ghost\"\r\n          size=\"sm\"\r\n          className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity z-10\"\r\n          onClick={() => handleCopy()}\r\n        >\r\n          {copied ? (\r\n            <Check className=\"h-4 w-4 text-green-500\" />\r\n          ) : (\r\n            <Copy className=\"h-4 w-4\" />\r\n          )}\r\n        </Button>\r\n      )}\r\n      \r\n      <div className={cn(\r\n        baseStyles[variant],\r\n        \"ai-response-content\",\r\n        // Enhanced prose styles for better readability\r\n        \"prose-headings:text-foreground prose-p:text-foreground prose-strong:text-foreground\",\r\n        \"prose-code:bg-muted prose-code:px-2 prose-code:py-1 prose-code:rounded prose-code:text-sm prose-code:font-mono\",\r\n        \"prose-pre:bg-transparent prose-pre:p-0 prose-pre:m-0\",\r\n        \"prose-blockquote:border-l-primary prose-blockquote:bg-muted/30 prose-blockquote:pl-4 prose-blockquote:py-2 prose-blockquote:rounded-r\",\r\n        \"prose-ul:my-3 prose-ol:my-3 prose-li:my-1\",\r\n        \"prose-table:border prose-th:border prose-td:border prose-th:bg-muted prose-th:p-3 prose-td:p-3\",\r\n        \"prose-a:text-primary prose-a:no-underline hover:prose-a:underline\"\r\n      )}>\r\n        <ReactMarkdown\r\n          remarkPlugins={[remarkGfm]}\r\n          components={{\r\n            // Enhanced heading components with better styling\r\n            h1: ({ children, ...props }) => (\r\n              <div className=\"mb-6\">\r\n                <h1 className=\"text-2xl font-bold text-foreground border-b-2 border-primary pb-2 mb-2\" {...props}>\r\n                  {children}\r\n                </h1>\r\n              </div>\r\n            ),\r\n            h2: ({ children, ...props }) => (\r\n              <h2 className=\"text-xl font-semibold text-foreground mt-6 mb-3 flex items-center\" {...props}>\r\n                <span className=\"w-1 h-6 bg-primary rounded mr-3\"></span>\r\n                {children}\r\n              </h2>\r\n            ),\r\n            h3: ({ children, ...props }) => (\r\n              <h3 className=\"text-lg font-medium text-foreground mt-4 mb-2\" {...props}>\r\n                {children}\r\n              </h3>\r\n            ),\r\n            p: ({ children, ...props }) => (\r\n              <p className=\"mb-4 text-foreground leading-relaxed\" {...props}>\r\n                {children}\r\n              </p>\r\n            ),\r\n            // Enhanced list styling\r\n            ul: ({ children, ...props }) => (\r\n              <ul className=\"list-none pl-0 mb-4 space-y-2\" {...props}>\r\n                {children}\r\n              </ul>\r\n            ),\r\n            ol: ({ children, ...props }) => (\r\n              <ol className=\"list-none pl-0 mb-4 space-y-2 counter-reset-item\" {...props}>\r\n                {children}\r\n              </ol>\r\n            ),\r\n            li: ({ children, ...props }) => (\r\n              <li className=\"flex items-start text-foreground\" {...props}>\r\n                <span className=\"flex-shrink-0 w-6 h-6 rounded-full flex items-center justify-center text-xs font-medium mr-3 mt-0.5 bg-primary/20 text-primary\">\r\n                  •\r\n                </span>\r\n                <div className=\"flex-1\">{children}</div>\r\n              </li>\r\n            ),\r\n            // Enhanced blockquote\r\n            blockquote: ({ children, ...props }) => (\r\n              <blockquote className=\"my-6 border-l-4 border-primary bg-muted/30 rounded-r-lg\" {...props}>\r\n                <div className=\"p-4\">\r\n                  <div className=\"text-primary text-sm font-medium mb-2\">💡 Key Insight</div>\r\n                  {children}\r\n                </div>\r\n              </blockquote>\r\n            ),\r\n            // Enhanced code blocks with syntax highlighting\r\n            code: ({ inline, className, children, ...props }: any) => {\r\n              const match = /language-(\\w+)/.exec(className || '');\r\n              const language = match ? match[1] : '';\r\n\r\n              if (inline) {\r\n                return (\r\n                  <code className=\"bg-muted px-2 py-1 rounded text-sm font-mono border\" {...props}>\r\n                    {children}\r\n                  </code>\r\n                );\r\n              }\r\n\r\n              return (\r\n                <div className=\"my-4 rounded-lg border overflow-hidden\">\r\n                  <div className=\"bg-muted px-4 py-2 border-b flex items-center justify-between\">\r\n                    <Badge variant=\"secondary\" className=\"text-xs\">\r\n                      {language || 'code'}\r\n                    </Badge>\r\n                    <Button\r\n                      variant=\"ghost\"\r\n                      size=\"sm\"\r\n                      onClick={() => navigator.clipboard.writeText(String(children))}\r\n                      className=\"h-6 text-xs\"\r\n                    >\r\n                      <Copy className=\"h-3 w-3 mr-1\" />\r\n                      Copy\r\n                    </Button>\r\n                  </div>\r\n                  <SyntaxHighlighter\r\n                    style={theme === 'dark' ? oneDark : oneLight}\r\n                    language={language}\r\n                    PreTag=\"div\"\r\n                    className=\"!m-0 !bg-transparent\"\r\n                    customStyle={{\r\n                      margin: 0,\r\n                      padding: '1rem',\r\n                      background: 'transparent',\r\n                      fontSize: '0.875rem'\r\n                    }}\r\n                  >\r\n                    {String(children).replace(/\\n$/, '')}\r\n                  </SyntaxHighlighter>\r\n                </div>\r\n              );\r\n            },\r\n            // Enhanced table styling\r\n            table: ({ children, ...props }) => (\r\n              <div className=\"overflow-x-auto my-6 rounded-lg border\">\r\n                <table className=\"min-w-full border-collapse\" {...props}>\r\n                  {children}\r\n                </table>\r\n              </div>\r\n            ),\r\n            th: ({ children, ...props }) => (\r\n              <th className=\"border-b bg-muted p-3 text-left font-semibold text-foreground\" {...props}>\r\n                {children}\r\n              </th>\r\n            ),\r\n            td: ({ children, ...props }) => (\r\n              <td className=\"border-b p-3 text-foreground\" {...props}>\r\n                {children}\r\n              </td>\r\n            ),\r\n            // Enhanced links\r\n            a: ({ children, href, ...props }) => (\r\n              <a\r\n                href={href}\r\n                className=\"text-primary hover:underline inline-flex items-center gap-1\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                {...props}\r\n              >\r\n                {children}\r\n                <ExternalLink className=\"h-3 w-3\" />\r\n              </a>\r\n            ),\r\n          }}\r\n        >\r\n          {content}\r\n        </ReactMarkdown>\r\n      </div>\r\n\r\n      {/* Tool-specific action buttons */}\r\n      {showToolButtons && toolType !== 'general' && (\r\n        <div className=\"flex gap-2 mt-4 pt-4 border-t\">\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            onClick={() => handleCopy(content, `${toolType} prompt`)}\r\n            className={cn(\"text-xs\", getToolColor(toolType))}\r\n          >\r\n            <Copy className=\"h-3 w-3 mr-1\" />\r\n            Copy for {toolType}\r\n          </Button>\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            onClick={() => {\r\n              const urls = {\r\n                framer: 'https://framer.com',\r\n                flutterflow: 'https://flutterflow.io',\r\n                uizard: 'https://uizard.io',\r\n                cursor: 'https://cursor.sh',\r\n                lovable: 'https://lovable.dev'\r\n              };\r\n              window.open(urls[toolType] || `https://${toolType}.com`, '_blank');\r\n            }}\r\n            className=\"text-xs\"\r\n          >\r\n            <ExternalLink className=\"h-3 w-3 mr-1\" />\r\n            Open {toolType}\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AIResponse;\r\n"],"names":["PromptGuide","promptExamples","_jsxs","className","children","_jsx","Tabs","defaultValue","TabsList","TabsTrigger","value","TabsContent","Card","CardHeader","CardTitle","CardContent","AIResponse","content","variant","showCopyButton","_ref","title","toolType","showToolButtons","metadata","copied","setCopied","useState","copiedSection","setCopiedSection","theme","useTheme","toast","useToast","handleCopy","async","text","arguments","length","undefined","label","navigator","clipboard","writeText","setTimeout","description","concat","error","console","getToolColor","tool","cn","Monitor","Smartphone","Palette","Code","Zap","getToolIcon","appType","Badge","uiStyle","complexity","estimatedTime","Button","size","onClick","_Fragment","Check","Copy","default","compact","chat","ReactMarkdown","remarkPlugins","remarkGfm","components","h1","_ref2","props","_objectWithoutProperties","_excluded","_objectSpread","h2","_ref3","_excluded2","h3","_ref4","_excluded3","p","_ref5","_excluded4","ul","_ref6","_excluded5","ol","_ref7","_excluded6","li","_ref8","_excluded7","blockquote","_ref9","_excluded8","code","_ref0","inline","_excluded9","match","exec","language","String","SyntaxHighlighter","style","oneDark","oneLight","PreTag","customStyle","margin","padding","background","fontSize","replace","table","_ref1","_excluded0","th","_ref10","_excluded1","td","_ref11","_excluded10","a","_ref12","href","_excluded11","target","rel","ExternalLink","window","open","framer","flutterflow","uizard","cursor","lovable"],"sourceRoot":""}