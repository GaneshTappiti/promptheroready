{"version":3,"file":"static/js/9766.211a00c8.chunk.js","mappings":"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","sources":["components/investor/LogContactModal.tsx","components/investor/InvestorProfile.tsx","components/investor/InvestorCard.tsx","components/investor/EmptyState.tsx","components/investor/InvestorsList.tsx","components/investor/AddFundingRoundModal.tsx","components/investor/FundingRoundsList.tsx","components/investor/PitchDeckView.tsx","components/ui/drawer.tsx","components/investor/FilterDrawer.tsx","components/investor/AddInvestorModal.tsx","components/investor/SearchBar.tsx","components/investor/ActionBar.tsx","components/investor/TabNavigation.tsx","pages/InvestorRadar.tsx","lib/supabase-connection-helpers.ts","components/ui/form.tsx","components/ui/beta-label.tsx","components/WorkspaceSidebar.tsx"],"sourcesContent":["\r\nimport React from \"react\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { z } from \"zod\";\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\r\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { Investor } from \"@/types/investor\";\r\n\r\ninterface LogContactModalProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  onSubmit: (data: ContactFormValues) => void;\r\n  investor: Investor;\r\n}\r\n\r\nconst contactSchema = z.object({\r\n  date: z.string().min(1, \"Date is required\"),\r\n  type: z.string().min(1, \"Contact type is required\"),\r\n  notes: z.string().min(1, \"Notes are required\"),\r\n  outcome: z.string().optional()\r\n});\r\n\r\ntype ContactFormValues = z.infer<typeof contactSchema>;\r\n\r\nconst LogContactModal: React.FC<LogContactModalProps> = ({\r\n  open,\r\n  onClose,\r\n  onSubmit,\r\n  investor\r\n}) => {\r\n  const form = useForm<ContactFormValues>({\r\n    resolver: zodResolver(contactSchema),\r\n    defaultValues: {\r\n      date: new Date().toISOString().split(\"T\")[0],\r\n      type: \"meeting\",\r\n      notes: \"\",\r\n      outcome: \"\"\r\n    }\r\n  });\r\n\r\n  function handleSubmit(data: ContactFormValues) {\r\n    onSubmit(data);\r\n    form.reset();\r\n  }\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={onClose}>\r\n      <DialogContent className=\"sm:max-w-[500px]\">\r\n        <DialogHeader>\r\n          <DialogTitle>Log Contact with {investor.name}</DialogTitle>\r\n        </DialogHeader>\r\n        <Form {...form}>\r\n          <form onSubmit={form.handleSubmit(handleSubmit)} className=\"space-y-4\">\r\n            <FormField\r\n              control={form.control}\r\n              name=\"date\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Date</FormLabel>\r\n                  <FormControl>\r\n                    <Input type=\"date\" {...field} />\r\n                  </FormControl>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n            \r\n            <FormField\r\n              control={form.control}\r\n              name=\"type\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Contact Type</FormLabel>\r\n                  <Select onValueChange={field.onChange} defaultValue={field.value}>\r\n                    <FormControl>\r\n                      <SelectTrigger>\r\n                        <SelectValue placeholder=\"Select contact type\" />\r\n                      </SelectTrigger>\r\n                    </FormControl>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"meeting\">Meeting</SelectItem>\r\n                      <SelectItem value=\"call\">Call</SelectItem>\r\n                      <SelectItem value=\"email\">Email</SelectItem>\r\n                      <SelectItem value=\"other\">Other</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n            \r\n            <FormField\r\n              control={form.control}\r\n              name=\"notes\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Notes</FormLabel>\r\n                  <FormControl>\r\n                    <Textarea \r\n                      placeholder=\"Enter notes from your contact\" \r\n                      className=\"min-h-[100px]\" \r\n                      {...field} \r\n                    />\r\n                  </FormControl>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n            \r\n            <FormField\r\n              control={form.control}\r\n              name=\"outcome\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Outcome</FormLabel>\r\n                  <FormControl>\r\n                    <Input placeholder=\"Next steps or outcome\" {...field} />\r\n                  </FormControl>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n            \r\n            <div className=\"flex justify-end space-x-2 pt-2\">\r\n              <Button variant=\"outline\" type=\"button\" onClick={onClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button type=\"submit\">Save Contact</Button>\r\n            </div>\r\n          </form>\r\n        </Form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default LogContactModal;\r\n","\r\nimport React from \"react\";\r\nimport { Investor } from \"@/types/investor\";\r\nimport { Card, CardContent, CardDescription, CardTitle } from \"@/components/ui/card\";\r\nimport { Briefcase, Calendar, Clock as ClockIcon } from \"lucide-react\";\r\n\r\ninterface InvestorProfileProps {\r\n  investor: Investor;\r\n}\r\n\r\nconst InvestorProfile: React.FC<InvestorProfileProps> = ({ investor }) => {\r\n  return (\r\n    <div className=\"space-y-6 py-4\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold\">{investor.name}</h2>\r\n          <p className=\"text-muted-foreground\">{investor.focus}</p>\r\n        </div>\r\n        <div className={`px-3 py-1 rounded text-xs uppercase \r\n          ${investor.status === 'interested' ? 'bg-green-500/20 text-green-300' : \r\n           investor.status === 'follow-up' ? 'bg-yellow-500/20 text-yellow-300' :\r\n           'bg-blue-500/20 text-blue-300'}\r\n        `}>\r\n          {investor.status}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-3 gap-4 text-sm\">\r\n        <div className=\"flex flex-col\">\r\n          <span className=\"text-muted-foreground\">Portfolio Size</span>\r\n          <span className=\"font-medium\">{investor.portfolio} companies</span>\r\n        </div>\r\n        <div className=\"flex flex-col\">\r\n          <span className=\"text-muted-foreground\">Investment Stage</span>\r\n          <span className=\"font-medium\">{investor.stage}</span>\r\n        </div>\r\n        <div className=\"flex flex-col\">\r\n          <span className=\"text-muted-foreground\">Last Contact</span>\r\n          <span className=\"font-medium\">{investor.lastMeeting}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"space-y-2\">\r\n        <h3 className=\"text-lg font-medium\">Notes</h3>\r\n        <p className=\"text-muted-foreground\">{investor.notes || \"No notes available.\"}</p>\r\n      </div>\r\n\r\n      <div className=\"space-y-3\">\r\n        <h3 className=\"text-lg font-medium\">Contact History</h3>\r\n        {investor.contacts && investor.contacts.length > 0 ? (\r\n          <div className=\"space-y-3\">\r\n            {investor.contacts.map(contact => (\r\n              <Card key={contact.id} className=\"p-3\">\r\n                <CardContent className=\"p-0\">\r\n                  <div className=\"flex justify-between\">\r\n                    <div className=\"font-medium\">{contact.type}</div>\r\n                    <div className=\"text-sm text-muted-foreground\">{contact.date}</div>\r\n                  </div>\r\n                  <p className=\"mt-2 text-sm\">{contact.notes}</p>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"text-center py-6 bg-muted/50 rounded-lg\">\r\n            <p className=\"text-muted-foreground\">No contact history available</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InvestorProfile;\r\n","\r\nimport React, { useState } from \"react\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from \"@/components/ui/dialog\";\r\nimport { Investor } from \"@/types/investor\";\r\nimport LogContactModal from \"./LogContactModal\";\r\nimport InvestorProfile from \"./InvestorProfile\";\r\n\r\ninterface InvestorCardProps {\r\n  investor: Investor;\r\n  onLogContact: (id: number, contactDetails: unknown) => void;\r\n  onStatusChange: (id: number, status: string) => void;\r\n}\r\n\r\nconst InvestorCard: React.FC<InvestorCardProps> = ({ \r\n  investor, \r\n  onLogContact, \r\n  onStatusChange \r\n}) => {\r\n  const [isProfileOpen, setIsProfileOpen] = useState(false);\r\n  const [isLogContactOpen, setIsLogContactOpen] = useState(false);\r\n  \r\n  const getStatusClass = (status: string) => {\r\n    switch(status) {\r\n      case 'interested':\r\n        return 'bg-green-500/20 text-green-300';\r\n      case 'follow-up':\r\n        return 'bg-yellow-500/20 text-yellow-300';\r\n      case 'to-contact':\r\n        return 'bg-blue-500/20 text-blue-300';\r\n      case 'rejected':\r\n        return 'bg-red-500/20 text-red-300';\r\n      case 'committed':\r\n        return 'bg-purple-500/20 text-purple-300';\r\n      default:\r\n        return 'bg-blue-500/20 text-blue-300';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"workspace-card hover:shadow-lg transition-all duration-200 hover:border-primary/40\">\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center justify-between\">\r\n            <span>{investor.name}</span>\r\n            <TooltipProvider>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <span \r\n                    className={`px-2 py-1 rounded text-xs uppercase cursor-pointer ${getStatusClass(investor.status)}`}\r\n                    onClick={() => {\r\n                      // In a real app, this would open a dropdown to change status\r\n                      const newStatus = investor.status === 'interested' ? 'follow-up' : 'interested';\r\n                      onStatusChange(investor.id, newStatus);\r\n                    }}\r\n                  >\r\n                    {investor.status}\r\n                  </span>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  <p>Click to change status</p>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n            </TooltipProvider>\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n            <div>\r\n              <p className=\"text-muted-foreground\">Focus</p>\r\n              <p className=\"font-medium\">{investor.focus}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-muted-foreground\">Portfolio</p>\r\n              <p className=\"font-medium\">{investor.portfolio} companies</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-muted-foreground\">Stage</p>\r\n              <p className=\"font-medium\">{investor.stage}</p>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-muted-foreground\">Last Meeting</p>\r\n              <p className=\"font-medium\">{investor.lastMeeting}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex justify-end gap-2\">\r\n            <Button \r\n              variant=\"outline\" \r\n              size=\"sm\" \r\n              onClick={() => setIsLogContactOpen(true)}\r\n              className=\"transition-all hover:bg-accent hover:text-accent-foreground\"\r\n            >\r\n              Log Contact\r\n            </Button>\r\n            <Button \r\n              size=\"sm\" \r\n              onClick={() => setIsProfileOpen(true)}\r\n              className=\"transition-all hover:scale-105\"\r\n            >\r\n              View Profile\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Investor profile dialog */}\r\n      <Dialog open={isProfileOpen} onOpenChange={setIsProfileOpen}>\r\n        <DialogContent className=\"sm:max-w-[600px]\">\r\n          <DialogHeader>\r\n            <DialogTitle>Investor Profile</DialogTitle>\r\n            <DialogDescription>\r\n              Detailed information about {investor.name}\r\n            </DialogDescription>\r\n          </DialogHeader>\r\n          <InvestorProfile investor={investor} />\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Log contact modal */}\r\n      <LogContactModal \r\n        open={isLogContactOpen}\r\n        onClose={() => setIsLogContactOpen(false)}\r\n        onSubmit={(contactDetails) => {\r\n          onLogContact(investor.id, contactDetails);\r\n          setIsLogContactOpen(false);\r\n        }}\r\n        investor={investor}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InvestorCard;\r\n","\r\nimport React from \"react\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Briefcase, Users, Plus } from \"lucide-react\";\r\n\r\ninterface EmptyStateProps {\r\n  type: \"investors\" | \"funding\";\r\n  onAction: () => void;\r\n}\r\n\r\nconst EmptyState: React.FC<EmptyStateProps> = ({ type, onAction }) => {\r\n  return (\r\n    <Card className=\"workspace-card p-6 animate-fade-in\">\r\n      <CardContent className=\"text-center py-16\">\r\n        <div className=\"rounded-full bg-primary/20 p-4 mx-auto mb-6 w-16 h-16 flex items-center justify-center animate-float\">\r\n          {type === \"investors\" ? (\r\n            <Users className=\"h-8 w-8 text-primary\" />\r\n          ) : (\r\n            <Briefcase className=\"h-8 w-8 text-primary\" />\r\n          )}\r\n        </div>\r\n        <h3 className=\"text-2xl font-medium mb-4\">\r\n          {type === \"investors\" ? \"No Investors Yet\" : \"No Funding Rounds Yet\"}\r\n        </h3>\r\n        <p className=\"text-muted-foreground mb-8 max-w-md mx-auto\">\r\n          {type === \"investors\"\r\n            ? \"Start tracking potential investors for your startup. Add investors to keep track of your fundraising progress.\"\r\n            : \"Plan and track your fundraising rounds to organize your fundraising efforts.\"}\r\n        </p>\r\n        <Button onClick={onAction} className=\"transition-all hover:scale-105\">\r\n          <Plus className=\"h-4 w-4 mr-2\" />\r\n          {type === \"investors\" ? \"Add Your First Investor\" : \"Create Your First Funding Round\"}\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EmptyState;\r\n","\r\nimport React from \"react\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Plus } from \"lucide-react\";\r\nimport { Investor } from \"@/types/investor\";\r\nimport InvestorCard from \"./InvestorCard\";\r\nimport EmptyState from \"./EmptyState\";\r\n\r\ninterface InvestorsListProps {\r\n  investors: Investor[];\r\n  onLogContact: (id: number, contactDetails: unknown) => void;\r\n  onStatusChange: (id: number, status: string) => void;\r\n  onAddInvestor: () => void;\r\n}\r\n\r\nconst InvestorsList: React.FC<InvestorsListProps> = ({\r\n  investors,\r\n  onLogContact,\r\n  onStatusChange,\r\n  onAddInvestor\r\n}) => {\r\n  if (investors.length === 0) {\r\n    return <EmptyState type=\"investors\" onAction={onAddInvestor} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 animate-fade-in\">\r\n      {investors.map(investor => (\r\n        <InvestorCard \r\n          key={investor.id} \r\n          investor={investor}\r\n          onLogContact={onLogContact}\r\n          onStatusChange={onStatusChange}\r\n        />\r\n      ))}\r\n      \r\n      <Card className=\"workspace-card border-dashed border-2 flex flex-col items-center justify-center cursor-pointer h-full transition-all duration-200 hover:shadow-md hover:border-primary/50\">\r\n        <CardContent className=\"flex flex-col items-center justify-center p-6 h-full\" onClick={onAddInvestor}>\r\n          <div className=\"rounded-full bg-primary/20 p-3 mb-4 transition-transform hover:scale-110\">\r\n            <Plus className=\"h-6 w-6 text-primary\" />\r\n          </div>\r\n          <p className=\"font-medium\">Add New Investor</p>\r\n          <p className=\"text-sm text-muted-foreground\">Track a potential funding source</p>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InvestorsList;\r\n","\r\nimport React from \"react\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { z } from \"zod\";\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from \"@/components/ui/dialog\";\r\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { FundingRound, FundingRoundInput } from \"@/types/investor\";\r\n\r\ninterface AddFundingRoundModalProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  onSubmit: (data: FundingRoundInput) => void;\r\n}\r\n\r\nconst fundingRoundSchema = z.object({\r\n  name: z.string().min(1, \"Name is required\"),\r\n  target: z.string().min(1, \"Target amount is required\"),\r\n  raised: z.string().default(\"$0\"),\r\n  progress: z.coerce.number().min(0).max(100).default(0),\r\n  investors: z.coerce.number().int().min(0).default(0),\r\n  status: z.enum([\"active\", \"planned\", \"completed\"]).default(\"planned\"),\r\n  timeline: z.string().optional(),\r\n});\r\n\r\ntype FundingRoundFormValues = z.infer<typeof fundingRoundSchema>;\r\n\r\nconst AddFundingRoundModal: React.FC<AddFundingRoundModalProps> = ({ \r\n  open, \r\n  onClose, \r\n  onSubmit \r\n}) => {\r\n  const form = useForm<FundingRoundFormValues>({\r\n    resolver: zodResolver(fundingRoundSchema),\r\n    defaultValues: {\r\n      name: \"\",\r\n      target: \"\",\r\n      raised: \"$0\",\r\n      progress: 0,\r\n      investors: 0,\r\n      status: \"planned\",\r\n      timeline: \"3 months\",\r\n    }\r\n  });\r\n\r\n  function handleSubmit(data: FundingRoundFormValues) {\r\n    // Ensure all required fields are present\r\n    const roundData: FundingRoundInput = {\r\n      name: data.name,\r\n      target: data.target,\r\n      raised: data.raised,\r\n      progress: data.progress,\r\n      investors: data.investors,\r\n      status: data.status,\r\n      timeline: data.timeline,\r\n    };\r\n    \r\n    onSubmit(roundData);\r\n    form.reset();\r\n  }\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={onClose}>\r\n      <DialogContent className=\"sm:max-w-[500px]\">\r\n        <DialogHeader>\r\n          <DialogTitle>Create New Funding Round</DialogTitle>\r\n          <DialogDescription>\r\n            Set up a new funding round to track fundraising progress.\r\n          </DialogDescription>\r\n        </DialogHeader>\r\n\r\n        <Form {...form}>\r\n          <form onSubmit={form.handleSubmit(handleSubmit)} className=\"space-y-4\">\r\n            <FormField\r\n              control={form.control}\r\n              name=\"name\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Round Name</FormLabel>\r\n                  <FormControl>\r\n                    <Input placeholder=\"e.g. Seed Round, Series A\" {...field} />\r\n                  </FormControl>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n            \r\n            <FormField\r\n              control={form.control}\r\n              name=\"target\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Target Amount</FormLabel>\r\n                  <FormControl>\r\n                    <Input placeholder=\"e.g. $500K, $2M\" {...field} />\r\n                  </FormControl>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n            \r\n            <FormField\r\n              control={form.control}\r\n              name=\"status\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Status</FormLabel>\r\n                  <Select onValueChange={field.onChange} defaultValue={field.value}>\r\n                    <FormControl>\r\n                      <SelectTrigger>\r\n                        <SelectValue placeholder=\"Select status\" />\r\n                      </SelectTrigger>\r\n                    </FormControl>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"planned\">Planned</SelectItem>\r\n                      <SelectItem value=\"active\">Active</SelectItem>\r\n                      <SelectItem value=\"completed\">Completed</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n            \r\n            <FormField\r\n              control={form.control}\r\n              name=\"timeline\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Timeline</FormLabel>\r\n                  <FormControl>\r\n                    <Input placeholder=\"e.g. 3 months, 6 months\" {...field} />\r\n                  </FormControl>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n            \r\n            <div className=\"flex justify-end space-x-2 pt-2\">\r\n              <Button variant=\"outline\" type=\"button\" onClick={onClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button type=\"submit\">Create Round</Button>\r\n            </div>\r\n          </form>\r\n        </Form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddFundingRoundModal;\r\n","\r\nimport React, { useState } from \"react\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Plus, Briefcase, Clock as ClockIcon } from \"lucide-react\";\r\nimport { FundingRound, FundingRoundInput } from \"@/types/investor\";\r\nimport EmptyState from \"./EmptyState\";\r\nimport AddFundingRoundModal from \"./AddFundingRoundModal\";\r\n\r\ninterface FundingRoundsListProps {\r\n  fundingRounds: FundingRound[];\r\n  onAddFundingRound: (round: FundingRoundInput) => void;\r\n}\r\n\r\nconst FundingRoundsList: React.FC<FundingRoundsListProps> = ({\r\n  fundingRounds,\r\n  onAddFundingRound\r\n}) => {\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n  \r\n  if (fundingRounds.length === 0) {\r\n    return <EmptyState type=\"funding\" onAction={() => setIsAddModalOpen(true)} />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 animate-fade-in\">\r\n        {fundingRounds.map(round => (\r\n          <Card key={round.id} className=\"workspace-card hover:shadow-lg transition-all duration-200 hover:border-primary/40\">\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center justify-between\">\r\n                <span>{round.name}</span>\r\n                <span className={`px-2 py-1 rounded text-xs uppercase ${\r\n                  round.status === 'active' ? 'bg-green-500/20 text-green-300' : \r\n                  round.status === 'completed' ? 'bg-blue-500/20 text-blue-300' :\r\n                  'bg-purple-500/20 text-purple-300'\r\n                }`}>\r\n                  {round.status}\r\n                </span>\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"bg-white/5 p-4 rounded-md\">\r\n                <div className=\"flex justify-between mb-2\">\r\n                  <span>Progress</span>\r\n                  <span>{round.raised} / {round.target}</span>\r\n                </div>\r\n                <div className=\"h-2 bg-white/10 rounded overflow-hidden\">\r\n                  <div \r\n                    className=\"h-full bg-primary transition-all duration-500 ease-in-out\" \r\n                    style={{ width: `${round.progress}%` }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <Briefcase className=\"h-5 w-5 text-muted-foreground\" />\r\n                  <div>\r\n                    <p className=\"text-sm text-muted-foreground\">Investors</p>\r\n                    <p className=\"font-medium\">{round.investors}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <ClockIcon className=\"h-5 w-5 text-muted-foreground\" />\r\n                  <div>\r\n                    <p className=\"text-sm text-muted-foreground\">Timeline</p>\r\n                    <p className=\"font-medium\">{round.timeline || \"3 months\"}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"flex justify-end gap-2\">\r\n                <Button \r\n                  size=\"sm\"\r\n                  className=\"transition-all hover:scale-105\"\r\n                >\r\n                  Manage Round\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n        \r\n        <Card \r\n          className=\"workspace-card border-dashed border-2 flex flex-col items-center justify-center cursor-pointer transition-all duration-200 hover:shadow-md hover:border-primary/50\"\r\n          onClick={() => setIsAddModalOpen(true)}\r\n        >\r\n          <CardContent className=\"flex flex-col items-center justify-center p-6\">\r\n            <div className=\"rounded-full bg-primary/20 p-3 mb-4 transition-transform hover:scale-110\">\r\n              <Plus className=\"h-6 w-6 text-primary\" />\r\n            </div>\r\n            <p className=\"font-medium\">Create New Funding Round</p>\r\n            <p className=\"text-sm text-muted-foreground\">Plan your next fundraising effort</p>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      <AddFundingRoundModal \r\n        open={isAddModalOpen}\r\n        onClose={() => setIsAddModalOpen(false)}\r\n        onSubmit={(data) => {\r\n          onAddFundingRound(data);\r\n          setIsAddModalOpen(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FundingRoundsList;\r\n","\r\nimport React from \"react\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { ArrowUpRight, FileText, Presentation } from \"lucide-react\";\r\n\r\nconst PitchDeckView: React.FC = () => {\r\n  return (\r\n    <Card className=\"workspace-card p-6 animate-fade-in\">\r\n      <div className=\"text-center py-16\">\r\n        <div className=\"rounded-full bg-primary/20 p-4 mx-auto mb-6 w-16 h-16 flex items-center justify-center animate-float\">\r\n          <ArrowUpRight className=\"h-8 w-8 text-primary\" />\r\n        </div>\r\n        <h3 className=\"text-2xl font-medium mb-4\">Create Your Pitch Deck</h3>\r\n        <p className=\"text-muted-foreground mb-8 max-w-md mx-auto\">\r\n          Generate a professional investor presentation based on your startup data\r\n        </p>\r\n        <div className=\"flex gap-4 flex-wrap justify-center\">\r\n          <Button variant=\"outline\" className=\"transition-all hover:bg-accent hover:text-accent-foreground\">\r\n            <FileText className=\"h-4 w-4 mr-2\" />\r\n            Import Template\r\n          </Button>\r\n          <Button className=\"transition-all hover:scale-105\">\r\n            <Presentation className=\"h-4 w-4 mr-2\" />\r\n            Create New Deck\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PitchDeckView;\r\n","import * as React from \"react\"\r\nimport { Drawer as DrawerPrimitive } from \"vaul\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Drawer = ({\r\n  shouldScaleBackground = true,\r\n  ...props\r\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\r\n  <DrawerPrimitive.Root\r\n    shouldScaleBackground={shouldScaleBackground}\r\n    {...props}\r\n  />\r\n)\r\nDrawer.displayName = \"Drawer\"\r\n\r\nconst DrawerTrigger = DrawerPrimitive.Trigger\r\n\r\nconst DrawerPortal = DrawerPrimitive.Portal\r\n\r\nconst DrawerClose = DrawerPrimitive.Close\r\n\r\nconst DrawerOverlay = React.forwardRef<\r\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <DrawerPrimitive.Overlay\r\n    ref={ref}\r\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\r\n    {...props}\r\n  />\r\n))\r\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\r\n\r\nconst DrawerContent = React.forwardRef<\r\n  React.ElementRef<typeof DrawerPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DrawerPortal>\r\n    <DrawerOverlay />\r\n    <DrawerPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\r\n      {children}\r\n    </DrawerPrimitive.Content>\r\n  </DrawerPortal>\r\n))\r\nDrawerContent.displayName = \"DrawerContent\"\r\n\r\nconst DrawerHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\r\n    {...props}\r\n  />\r\n)\r\nDrawerHeader.displayName = \"DrawerHeader\"\r\n\r\nconst DrawerFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\r\n    {...props}\r\n  />\r\n)\r\nDrawerFooter.displayName = \"DrawerFooter\"\r\n\r\nconst DrawerTitle = React.forwardRef<\r\n  React.ElementRef<typeof DrawerPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <DrawerPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-lg font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\r\n\r\nconst DrawerDescription = React.forwardRef<\r\n  React.ElementRef<typeof DrawerPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <DrawerPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\r\n\r\nexport {\r\n  Drawer,\r\n  DrawerPortal,\r\n  DrawerOverlay,\r\n  DrawerTrigger,\r\n  DrawerClose,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerFooter,\r\n  DrawerTitle,\r\n  DrawerDescription,\r\n}\r\n","\r\nimport React from \"react\";\r\nimport { Drawer, DrawerContent, DrawerHeader, DrawerTitle, DrawerClose, DrawerFooter } from \"@/components/ui/drawer\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Checkbox } from \"@/components/ui/checkbox\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { X } from \"lucide-react\";\r\n\r\ninterface FilterDrawerProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst FilterDrawer: React.FC<FilterDrawerProps> = ({ open, onClose }) => {\r\n  return (\r\n    <Drawer open={open} onOpenChange={onClose}>\r\n      <DrawerContent className=\"h-[85vh] max-h-[85vh] fixed bottom-0 left-0 right-0 rounded-t-lg\">\r\n        <DrawerHeader className=\"flex items-center justify-between\">\r\n          <DrawerTitle>Filter Investors</DrawerTitle>\r\n          <DrawerClose asChild>\r\n            <Button variant=\"ghost\" size=\"icon\">\r\n              <X className=\"h-4 w-4\" />\r\n            </Button>\r\n          </DrawerClose>\r\n        </DrawerHeader>\r\n        <div className=\"px-4 py-2 overflow-y-auto h-full\">\r\n          <div className=\"space-y-6\">\r\n            {/* Status filters */}\r\n            <div>\r\n              <h3 className=\"text-lg font-medium mb-3\">Status</h3>\r\n              <div className=\"space-y-2\">\r\n                {[\"Interested\", \"Follow-up\", \"To Contact\", \"Rejected\", \"Committed\"].map((status) => (\r\n                  <div key={status} className=\"flex items-center space-x-2\">\r\n                    <Checkbox id={`status-${status.toLowerCase()}`} />\r\n                    <Label htmlFor={`status-${status.toLowerCase()}`}>{status}</Label>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Stage filters */}\r\n            <div>\r\n              <h3 className=\"text-lg font-medium mb-3\">Investment Stage</h3>\r\n              <div className=\"space-y-2\">\r\n                {[\"Pre-Seed\", \"Seed\", \"Series A\", \"Series B\", \"Series C+\"].map((stage) => (\r\n                  <div key={stage} className=\"flex items-center space-x-2\">\r\n                    <Checkbox id={`stage-${stage.toLowerCase().replace(\" \", \"-\")}`} />\r\n                    <Label htmlFor={`stage-${stage.toLowerCase().replace(\" \", \"-\")}`}>{stage}</Label>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Focus area filters */}\r\n            <div>\r\n              <h3 className=\"text-lg font-medium mb-3\">Focus Areas</h3>\r\n              <div className=\"space-y-2\">\r\n                {[\"B2B SaaS\", \"Consumer Tech\", \"Fintech\", \"AI/ML\", \"Marketplace\", \"Healthcare\", \"Enterprise\"].map((focus) => (\r\n                  <div key={focus} className=\"flex items-center space-x-2\">\r\n                    <Checkbox id={`focus-${focus.toLowerCase().replace(\"/\", \"-\").replace(\" \", \"-\")}`} />\r\n                    <Label htmlFor={`focus-${focus.toLowerCase().replace(\"/\", \"-\").replace(\" \", \"-\")}`}>{focus}</Label>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Last contact filters */}\r\n            <div>\r\n              <h3 className=\"text-lg font-medium mb-3\">Last Contact</h3>\r\n              <div className=\"space-y-2\">\r\n                {[\"Last 7 days\", \"Last 30 days\", \"Last 3 months\", \"Older than 3 months\", \"Never contacted\"].map((timeframe) => (\r\n                  <div key={timeframe} className=\"flex items-center space-x-2\">\r\n                    <Checkbox id={`contact-${timeframe.toLowerCase().replace(\" \", \"-\")}`} />\r\n                    <Label htmlFor={`contact-${timeframe.toLowerCase().replace(\" \", \"-\")}`}>{timeframe}</Label>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <DrawerFooter className=\"border-t p-4\">\r\n          <div className=\"flex justify-between w-full\">\r\n            <Button variant=\"outline\" onClick={onClose}>\r\n              Reset Filters\r\n            </Button>\r\n            <Button onClick={onClose}>\r\n              Apply Filters\r\n            </Button>\r\n          </div>\r\n        </DrawerFooter>\r\n      </DrawerContent>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default FilterDrawer;\r\n","\r\nimport React from \"react\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { z } from \"zod\";\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from \"@/components/ui/dialog\";\r\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { Investor, InvestorInput, InvestorStatus } from \"@/types/investor\";\r\nimport { Textarea } from \"../ui/textarea\";\r\n\r\ninterface AddInvestorModalProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  onSubmit: (data: InvestorInput) => void;\r\n}\r\n\r\nconst investorSchema = z.object({\r\n  name: z.string().min(1, \"Name is required\"),\r\n  focus: z.string().min(1, \"Focus area is required\"),\r\n  portfolio: z.coerce.number().int().positive(\"Portfolio must be a positive number\"),\r\n  stage: z.string().min(1, \"Investment stage is required\"),\r\n  lastMeeting: z.string().default(\"Never\"),\r\n  status: z.string().min(1, \"Status is required\") as z.ZodType<InvestorStatus>,\r\n  notes: z.string().optional(),\r\n});\r\n\r\ntype InvestorFormValues = z.infer<typeof investorSchema>;\r\n\r\nconst AddInvestorModal: React.FC<AddInvestorModalProps> = ({ open, onClose, onSubmit }) => {\r\n  const form = useForm<InvestorFormValues>({\r\n    resolver: zodResolver(investorSchema),\r\n    defaultValues: {\r\n      name: \"\",\r\n      focus: \"\",\r\n      portfolio: 0,\r\n      stage: \"\",\r\n      lastMeeting: \"Never\",\r\n      status: \"to-contact\",\r\n      notes: \"\",\r\n    }\r\n  });\r\n\r\n  function handleSubmit(data: InvestorFormValues) {\r\n    // Ensure all required fields are present\r\n    const investorData: InvestorInput = {\r\n      name: data.name,\r\n      focus: data.focus,\r\n      portfolio: data.portfolio,\r\n      stage: data.stage,\r\n      lastMeeting: data.lastMeeting,\r\n      status: data.status as InvestorStatus,\r\n      notes: data.notes || \"\",\r\n    };\r\n    \r\n    onSubmit(investorData);\r\n    form.reset();\r\n  }\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={onClose}>\r\n      <DialogContent className=\"sm:max-w-[600px]\">\r\n        <DialogHeader>\r\n          <DialogTitle>Add New Investor</DialogTitle>\r\n          <DialogDescription>\r\n            Add details about a potential investor to track your fundraising efforts.\r\n          </DialogDescription>\r\n        </DialogHeader>\r\n\r\n        <Form {...form}>\r\n          <form onSubmit={form.handleSubmit(handleSubmit)} className=\"space-y-4\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <FormField\r\n                control={form.control}\r\n                name=\"name\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Investor Name</FormLabel>\r\n                    <FormControl>\r\n                      <Input placeholder=\"e.g. Sequoia Capital\" {...field} />\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n              \r\n              <FormField\r\n                control={form.control}\r\n                name=\"focus\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Focus Area</FormLabel>\r\n                    <FormControl>\r\n                      <Input placeholder=\"e.g. B2B SaaS, Consumer Tech\" {...field} />\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n\r\n              <FormField\r\n                control={form.control}\r\n                name=\"stage\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Investment Stage</FormLabel>\r\n                    <Select onValueChange={field.onChange} defaultValue={field.value}>\r\n                      <FormControl>\r\n                        <SelectTrigger>\r\n                          <SelectValue placeholder=\"Select investment stage\" />\r\n                        </SelectTrigger>\r\n                      </FormControl>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"Pre-seed, Seed\">Pre-seed, Seed</SelectItem>\r\n                        <SelectItem value=\"Series A\">Series A</SelectItem>\r\n                        <SelectItem value=\"Series A-B\">Series A-B</SelectItem>\r\n                        <SelectItem value=\"Series A-C\">Series A-C</SelectItem>\r\n                        <SelectItem value=\"Series B+\">Series B+</SelectItem>\r\n                        <SelectItem value=\"Growth\">Growth</SelectItem>\r\n                      </SelectContent>\r\n                    </Select>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n\r\n              <FormField\r\n                control={form.control}\r\n                name=\"portfolio\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Portfolio Size</FormLabel>\r\n                    <FormControl>\r\n                      <Input type=\"number\" {...field} />\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n\r\n              <FormField\r\n                control={form.control}\r\n                name=\"status\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Status</FormLabel>\r\n                    <Select onValueChange={field.onChange} defaultValue={field.value}>\r\n                      <FormControl>\r\n                        <SelectTrigger>\r\n                          <SelectValue placeholder=\"Select status\" />\r\n                        </SelectTrigger>\r\n                      </FormControl>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"to-contact\">To Contact</SelectItem>\r\n                        <SelectItem value=\"interested\">Interested</SelectItem>\r\n                        <SelectItem value=\"follow-up\">Follow-up</SelectItem>\r\n                        <SelectItem value=\"rejected\">Rejected</SelectItem>\r\n                        <SelectItem value=\"committed\">Committed</SelectItem>\r\n                      </SelectContent>\r\n                    </Select>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n\r\n              <FormField\r\n                control={form.control}\r\n                name=\"lastMeeting\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Last Contact</FormLabel>\r\n                    <FormControl>\r\n                      <Input placeholder=\"e.g. 2 weeks ago, Never\" {...field} />\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n            </div>\r\n            \r\n            <FormField\r\n              control={form.control}\r\n              name=\"notes\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Notes</FormLabel>\r\n                  <FormControl>\r\n                    <Textarea placeholder=\"Any additional notes about this investor...\" {...field} />\r\n                  </FormControl>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n            \r\n            <div className=\"flex justify-end space-x-2 pt-2\">\r\n              <Button variant=\"outline\" type=\"button\" onClick={onClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button type=\"submit\">Add Investor</Button>\r\n            </div>\r\n          </form>\r\n        </Form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddInvestorModal;\r\n","\r\nimport React from \"react\";\r\nimport { Search } from \"lucide-react\";\r\nimport { Input } from \"@/components/ui/input\";\r\n\r\ninterface SearchBarProps {\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  placeholder?: string;\r\n}\r\n\r\nconst SearchBar: React.FC<SearchBarProps> = ({ \r\n  value, \r\n  onChange, \r\n  placeholder = \"Search investors...\" \r\n}) => {\r\n  return (\r\n    <div className=\"relative flex-1 max-w-md\">\r\n      <Search className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\r\n      <Input \r\n        className=\"pl-10\" \r\n        placeholder={placeholder} \r\n        value={value}\r\n        onChange={(e) => onChange(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","\r\nimport React from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Filter, Plus } from \"lucide-react\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\ninterface ActionBarProps {\r\n  searchQuery: string;\r\n  onSearchChange: (value: string) => void;\r\n  onFilterClick: () => void;\r\n  onAddClick: () => void;\r\n}\r\n\r\nconst ActionBar: React.FC<ActionBarProps> = ({ \r\n  searchQuery, \r\n  onSearchChange, \r\n  onFilterClick, \r\n  onAddClick \r\n}) => {\r\n  return (\r\n    <div className=\"mb-8 flex flex-col md:flex-row gap-4 justify-between\">\r\n      <SearchBar \r\n        value={searchQuery}\r\n        onChange={onSearchChange}\r\n      />\r\n      <div className=\"flex gap-2\">\r\n        <Button \r\n          variant=\"outline\"\r\n          onClick={onFilterClick}\r\n          className=\"transition-all hover:bg-accent hover:text-accent-foreground\"\r\n        >\r\n          <Filter className=\"h-4 w-4 mr-2\" />\r\n          Filter\r\n        </Button>\r\n        <Button \r\n          onClick={onAddClick}\r\n          className=\"transition-all hover:scale-105\"\r\n        >\r\n          <Plus className=\"h-4 w-4 mr-2\" />\r\n          Add Investor\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionBar;\r\n","\r\nimport React from \"react\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\n\r\ninterface TabNavigationProps {\r\n  activeTab: string;\r\n  onTabChange: (tab: string) => void;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst TabNavigation: React.FC<TabNavigationProps> = ({ \r\n  activeTab, \r\n  onTabChange, \r\n  children \r\n}) => {\r\n  return (\r\n    <Tabs defaultValue={activeTab} className=\"mb-8\">\r\n      <TabsList className=\"mb-2 overflow-x-auto max-w-full\">\r\n        <TabsTrigger \r\n          value=\"investors\" \r\n          onClick={() => onTabChange(\"investors\")}\r\n          className={`transition-all ${activeTab === \"investors\" ? \"tab-active\" : \"\"}`}\r\n        >\r\n          Investors\r\n        </TabsTrigger>\r\n        <TabsTrigger \r\n          value=\"funding\" \r\n          onClick={() => onTabChange(\"funding\")}\r\n          className={`transition-all ${activeTab === \"funding\" ? \"tab-active\" : \"\"}`}\r\n        >\r\n          Funding Rounds\r\n        </TabsTrigger>\r\n        <TabsTrigger \r\n          value=\"pitchdeck\" \r\n          onClick={() => onTabChange(\"pitchdeck\")}\r\n          className={`transition-all ${activeTab === \"pitchdeck\" ? \"tab-active\" : \"\"}`}\r\n        >\r\n          Pitch Deck\r\n        </TabsTrigger>\r\n      </TabsList>\r\n      \r\n      {children}\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default TabNavigation;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport WorkspaceSidebar, { SidebarToggle } from \"@/components/WorkspaceSidebar\";\r\nimport InvestorsList from \"@/components/investor/InvestorsList\";\r\nimport FundingRoundsList from \"@/components/investor/FundingRoundsList\";\r\nimport PitchDeckView from \"@/components/investor/PitchDeckView\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport FilterDrawer from \"@/components/investor/FilterDrawer\";\r\nimport AddInvestorModal from \"@/components/investor/AddInvestorModal\";\r\nimport { Investor, InvestorInput, FundingRound, FundingRoundInput } from \"@/types/investor\";\r\nimport { TabsContent } from \"@/components/ui/tabs\";\r\nimport ActionBar from \"@/components/investor/ActionBar\";\r\nimport TabNavigation from \"@/components/investor/TabNavigation\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { ChevronLeft, Target } from \"lucide-react\";\r\nimport { investorRadarHelpers } from \"@/lib/supabase-connection-helpers\";\r\nimport { useAuth } from \"@/contexts/AuthContext\";\r\n\r\nconst InvestorRadar = () => {\r\n  const { user } = useAuth();\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n  const [activeTab, setActiveTab] = useState(\"investors\");\r\n  const [investors, setInvestors] = useState<Investor[]>([]);\r\n  const [fundingRounds, setFundingRounds] = useState<FundingRound[]>([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [filteredInvestors, setFilteredInvestors] = useState<Investor[]>([]);\r\n  const [isFilterOpen, setIsFilterOpen] = useState(false);\r\n  const [isAddInvestorOpen, setIsAddInvestorOpen] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const { toast } = useToast();\r\n\r\n  // Load data from database\r\n  const loadInvestors = async () => {\r\n    if (!user) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      const { data, error } = await investorRadarHelpers.getInvestors(user.id);\r\n\r\n      if (error) throw error;\r\n\r\n      setInvestors(data || []);\r\n    } catch (error: unknown) {\r\n      console.error('Error loading investors:', error);\r\n      toast({\r\n        title: \"Error Loading Investors\",\r\n        description: \"Failed to load your investors. Please try again.\",\r\n        variant: \"destructive\"\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadFundingRounds = async () => {\r\n    if (!user) return;\r\n\r\n    try {\r\n      const { data, error } = await investorRadarHelpers.getFundingRounds(user.id);\r\n\r\n      if (error) throw error;\r\n\r\n      setFundingRounds(data || []);\r\n    } catch (error: unknown) {\r\n      console.error('Error loading funding rounds:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      loadInvestors();\r\n      loadFundingRounds();\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    // Filter investors based on search query\r\n    const filtered = investors.filter((investor) =>\r\n      investor.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      investor.focus.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      investor.stage.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n    setFilteredInvestors(filtered);\r\n  }, [searchQuery, investors]);\r\n\r\n  const handleAddInvestor = async (investorData: InvestorInput) => {\r\n    if (!user) return;\r\n\r\n    try {\r\n      const { data, error } = await investorRadarHelpers.createInvestor({\r\n        ...investorData,\r\n        user_id: user.id\r\n      });\r\n\r\n      if (error) throw error;\r\n\r\n      if (data) {\r\n        setInvestors(prev => [...prev, data]);\r\n        setIsAddInvestorOpen(false);\r\n        toast({\r\n          title: \"Success\",\r\n          description: \"Investor added successfully\",\r\n        });\r\n      }\r\n    } catch (error: unknown) {\r\n      console.error('Error adding investor:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to add investor. Please try again.\",\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleUpdateInvestorStatus = (id: number, status: string) => {\r\n    const updatedInvestors = investors.map(investor => \r\n      investor.id === id ? { ...investor, status: status as any } : investor\r\n    );\r\n    setInvestors(updatedInvestors);\r\n    toast({\r\n      title: \"Status Updated\",\r\n      description: `Investor status changed to ${status}`,\r\n    });\r\n  };\r\n\r\n  const handleLogContact = (id: number, contactDetails: unknown) => {\r\n    // In a real app, this would update the investor with new contact information\r\n    toast({\r\n      title: \"Contact Logged\",\r\n      description: \"Contact information saved successfully\",\r\n    });\r\n  };\r\n\r\n  const handleAddFundingRound = (roundData: FundingRoundInput) => {\r\n    const updatedRounds = [...fundingRounds, { ...roundData, id: fundingRounds.length + 1 }];\r\n    setFundingRounds(updatedRounds);\r\n    toast({\r\n      title: \"Success\",\r\n      description: \"Funding round created successfully\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"layout-container bg-gradient-to-br from-black via-gray-900 to-green-950\">\r\n      <WorkspaceSidebar isOpen={sidebarOpen} setIsOpen={setSidebarOpen} />\r\n      <main className=\"layout-main transition-all duration-300\">\r\n        {/* Top Navigation Bar */}\r\n        <div className=\"sticky top-0 z-10 bg-black/80 backdrop-blur-xl border-b border-white/10\">\r\n          <div className=\"px-6 py-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center gap-4\">\r\n                <SidebarToggle onClick={() => setSidebarOpen(true)} />\r\n                <Link\r\n                  to=\"/workspace\"\r\n                  className=\"flex items-center gap-2 text-gray-400 hover:text-white transition-colors text-sm\"\r\n                >\r\n                  <ChevronLeft className=\"h-4 w-4\" />\r\n                  <span>Back to Workspace</span>\r\n                </Link>\r\n              </div>\r\n              <Button\r\n                onClick={() => setIsAddInvestorOpen(true)}\r\n                className=\"bg-green-600 hover:bg-green-700\"\r\n              >\r\n                <Target className=\"h-4 w-4 mr-2\" />\r\n                Add Investor\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Main Content */}\r\n        <div className=\"px-6 py-8\">\r\n          {/* Header Section */}\r\n          <div className=\"mb-8\">\r\n            <div className=\"flex items-center gap-3 mb-2\">\r\n              <Target className=\"h-8 w-8 text-green-400\" />\r\n              <h1 className=\"text-3xl md:text-4xl font-bold text-white\">Investor Radar</h1>\r\n            </div>\r\n            <p className=\"text-gray-400 text-lg\">\r\n              Track investors, manage relationships, and plan fundraising activities\r\n            </p>\r\n          </div>\r\n\r\n          {/* Main Content Container */}\r\n          <div className=\"bg-black/40 backdrop-blur-sm rounded-2xl border border-white/10 p-6\">\r\n          <div className=\"mb-6\">\r\n          <ActionBar \r\n            searchQuery={searchQuery}\r\n            onSearchChange={setSearchQuery}\r\n            onFilterClick={() => setIsFilterOpen(true)}\r\n            onAddClick={() => setIsAddInvestorOpen(true)}\r\n          />\r\n          </div>\r\n          <TabNavigation \r\n            activeTab={activeTab}\r\n            onTabChange={setActiveTab}\r\n          >\r\n            <TabsContent value=\"investors\" className=\"mt-4 md:mt-6 animate-fade-in\">\r\n              <InvestorsList \r\n                investors={filteredInvestors} \r\n                onLogContact={handleLogContact}\r\n                onStatusChange={handleUpdateInvestorStatus}\r\n                onAddInvestor={() => setIsAddInvestorOpen(true)}\r\n              />\r\n            </TabsContent>\r\n            <TabsContent value=\"funding\" className=\"mt-4 md:mt-6 animate-fade-in\">\r\n              <FundingRoundsList \r\n                fundingRounds={fundingRounds} \r\n                onAddFundingRound={handleAddFundingRound}\r\n              />\r\n            </TabsContent>\r\n            <TabsContent value=\"pitchdeck\" className=\"mt-4 md:mt-6 animate-fade-in\">\r\n              <PitchDeckView />\r\n            </TabsContent>\r\n          </TabNavigation>\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* Modals and drawers */}\r\n      <FilterDrawer \r\n        open={isFilterOpen} \r\n        onClose={() => setIsFilterOpen(false)} \r\n      />\r\n      <AddInvestorModal \r\n        open={isAddInvestorOpen} \r\n        onClose={() => setIsAddInvestorOpen(false)}\r\n        onSubmit={handleAddInvestor}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InvestorRadar;\r\n","// =====================================================\r\n// SUPABASE CONNECTION HELPERS\r\n// =====================================================\r\n// This file provides connection helpers for different modules\r\n// Re-exports from database-helpers for backward compatibility\r\n\r\nimport {\r\n  workspaceHelpers,\r\n  ideaVaultHelpers,\r\n  ideaForgeHelpers,\r\n  mvpStudioHelpers,\r\n  teamSpaceHelpers,\r\n  docsDecksHelpers,\r\n  onboardingHelpers,\r\n  profileHelpers,\r\n  adminHelpers,\r\n  subscriptionHelpers,\r\n  blueprintZoneHelpers as blueprintZoneHelpersOriginal,\r\n  allHelpers\r\n} from './database-helpers';\r\n\r\n// Re-export all helpers for backward compatibility\r\nexport const blueprintZoneHelpers = blueprintZoneHelpersOriginal;\r\nexport { docsDecksHelpers };\r\nexport { ideaForgeHelpers };\r\nexport const investorRadarHelpers = {\r\n  // Investor-specific helpers\r\n  async getInvestors(userId: string, filters?: unknown) {\r\n    return allHelpers.investorRadar.getInvestors(userId, filters);\r\n  },\r\n  async createInvestor(data: unknown) {\r\n    return allHelpers.investorRadar.createInvestor(data as any);\r\n  },\r\n  async updateInvestor(id: string, data: unknown) {\r\n    return allHelpers.investorRadar.updateInvestor(id, data);\r\n  },\r\n  async deleteInvestor(id: string) {\r\n    return allHelpers.investorRadar.deleteInvestor(id);\r\n  },\r\n  async getFundingRounds(userId: string) {\r\n    return allHelpers.investorRadar.getFundingRounds(userId);\r\n  }\r\n};\r\n\r\nexport { mvpStudioHelpers };\r\nexport const pitchPerfectHelpers = {\r\n  // Pitch Perfect specific helpers\r\n  async getPitchScripts(userId: string, scriptType?: string) {\r\n    return allHelpers.pitchPerfect.getPitchScripts(userId, scriptType);\r\n  },\r\n  async createPitchScript(data: unknown) {\r\n    return allHelpers.pitchPerfect.createPitchScript(data as any);\r\n  },\r\n  async getPitchDecks(userId: string, deckType?: string) {\r\n    return allHelpers.pitchPerfect.getPitchDecks(userId, deckType);\r\n  },\r\n  async createPitchDeck(data: unknown) {\r\n    return allHelpers.pitchPerfect.createPitchDeck(data as any);\r\n  },\r\n  async getPitchVideos(userId: string, videoType?: string) {\r\n    return allHelpers.pitchPerfect.getPitchVideos(userId, videoType);\r\n  },\r\n  async createPitchVideo(data: unknown) {\r\n    return allHelpers.pitchPerfect.createPitchVideo(data as any);\r\n  }\r\n};\r\n\r\nexport const taskPlannerHelpers = {\r\n  // Task Planner specific helpers\r\n  async getTasks(userId: string, filters?: { status?: string; priority?: string; projectId?: string }) {\r\n    return allHelpers.taskPlanner.getTasks(userId, filters);\r\n  },\r\n  async createTask(data: unknown) {\r\n    return allHelpers.taskPlanner.createTask(data as any);\r\n  },\r\n  async updateTask(id: string, data: unknown) {\r\n    return allHelpers.taskPlanner.updateTask(id, data);\r\n  },\r\n  async deleteTask(id: string) {\r\n    return allHelpers.taskPlanner.deleteTask(id);\r\n  },\r\n  async getProjects(userId: string) {\r\n    return allHelpers.taskPlanner.getProjects(userId);\r\n  },\r\n  async createProject(data: unknown) {\r\n    return allHelpers.taskPlanner.createProject(data as any);\r\n  }\r\n};\r\n\r\n// Export all helpers as a single object for convenience\r\nexport const connectionHelpers = {\r\n  blueprintZone: blueprintZoneHelpers,\r\n  docsDecks: docsDecksHelpers,\r\n  ideaForge: ideaForgeHelpers,\r\n  investorRadar: investorRadarHelpers,\r\n  mvpStudio: mvpStudioHelpers,\r\n  pitchPerfect: pitchPerfectHelpers,\r\n  taskPlanner: taskPlannerHelpers,\r\n  workspace: workspaceHelpers,\r\n  ideaVault: ideaVaultHelpers,\r\n  teamSpace: teamSpaceHelpers,\r\n  onboarding: onboardingHelpers,\r\n  profile: profileHelpers,\r\n  admin: adminHelpers,\r\n  subscription: subscriptionHelpers\r\n};\r\n\r\nexport default connectionHelpers;\r\n","import * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport {\r\n  Controller,\r\n  ControllerProps,\r\n  FieldPath,\r\n  FieldValues,\r\n  FormProvider,\r\n  useFormContext,\r\n} from \"react-hook-form\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Label } from \"@/components/ui/label\"\r\n\r\nconst Form = FormProvider\r\n\r\ntype FormFieldContextValue<\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n> = {\r\n  name: TName\r\n}\r\n\r\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\r\n  {} as FormFieldContextValue\r\n)\r\n\r\nconst FormField = <\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n>({\r\n  ...props\r\n}: ControllerProps<TFieldValues, TName>) => {\r\n  return (\r\n    <FormFieldContext.Provider value={{ name: props.name }}>\r\n      <Controller {...props} />\r\n    </FormFieldContext.Provider>\r\n  )\r\n}\r\n\r\nconst useFormField = () => {\r\n  const fieldContext = React.useContext(FormFieldContext)\r\n  const itemContext = React.useContext(FormItemContext)\r\n  const { getFieldState, formState } = useFormContext()\r\n\r\n  const fieldState = getFieldState(fieldContext.name, formState)\r\n\r\n  if (!fieldContext) {\r\n    throw new Error(\"useFormField should be used within <FormField>\")\r\n  }\r\n\r\n  const { id } = itemContext\r\n\r\n  return {\r\n    id,\r\n    name: fieldContext.name,\r\n    formItemId: `${id}-form-item`,\r\n    formDescriptionId: `${id}-form-item-description`,\r\n    formMessageId: `${id}-form-item-message`,\r\n    ...fieldState,\r\n  }\r\n}\r\n\r\ntype FormItemContextValue = {\r\n  id: string\r\n}\r\n\r\nconst FormItemContext = React.createContext<FormItemContextValue>(\r\n  {} as FormItemContextValue\r\n)\r\n\r\nconst FormItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => {\r\n  const id = React.useId()\r\n\r\n  return (\r\n    <FormItemContext.Provider value={{ id }}>\r\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\r\n    </FormItemContext.Provider>\r\n  )\r\n})\r\nFormItem.displayName = \"FormItem\"\r\n\r\nconst FormLabel = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\r\n>(({ className, ...props }, ref) => {\r\n  const { error, formItemId } = useFormField()\r\n\r\n  return (\r\n    <Label\r\n      ref={ref}\r\n      className={cn(error && \"text-destructive\", className)}\r\n      htmlFor={formItemId}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormLabel.displayName = \"FormLabel\"\r\n\r\nconst FormControl = React.forwardRef<\r\n  React.ElementRef<typeof Slot>,\r\n  React.ComponentPropsWithoutRef<typeof Slot>\r\n>(({ ...props }, ref) => {\r\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\r\n\r\n  return (\r\n    <Slot\r\n      ref={ref}\r\n      id={formItemId}\r\n      aria-describedby={\r\n        !error\r\n          ? `${formDescriptionId}`\r\n          : `${formDescriptionId} ${formMessageId}`\r\n      }\r\n      aria-invalid={!!error}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormControl.displayName = \"FormControl\"\r\n\r\nconst FormDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => {\r\n  const { formDescriptionId } = useFormField()\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formDescriptionId}\r\n      className={cn(\"text-sm text-muted-foreground\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormDescription.displayName = \"FormDescription\"\r\n\r\nconst FormMessage = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, children, ...props }, ref) => {\r\n  const { error, formMessageId } = useFormField()\r\n  const body = error ? String(error?.message) : children\r\n\r\n  if (!body) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formMessageId}\r\n      className={cn(\"text-sm font-medium text-destructive\", className)}\r\n      {...props}\r\n    >\r\n      {body}\r\n    </p>\r\n  )\r\n})\r\nFormMessage.displayName = \"FormMessage\"\r\n\r\nexport {\r\n  useFormField,\r\n  Form,\r\n  FormItem,\r\n  FormLabel,\r\n  FormControl,\r\n  FormDescription,\r\n  FormMessage,\r\n  FormField,\r\n}\r\n","/**\n * Beta Label Component\n * A small, reusable beta indicator for specific features or sections\n */\n\nimport React from 'react';\nimport { Badge } from '@/components/ui/badge';\nimport { cn } from '@/lib/utils';\n\ninterface BetaLabelProps {\n  className?: string;\n  variant?: 'default' | 'secondary' | 'outline' | 'destructive';\n  size?: 'sm' | 'default' | 'lg';\n  text?: string;\n  pulse?: boolean;\n}\n\nexport function BetaLabel({ \n  className,\n  variant = 'default',\n  size = 'sm',\n  text = 'BETA',\n  pulse = false\n}: BetaLabelProps) {\n  return (\n    <Badge \n      variant={variant}\n      className={cn(\n        'font-semibold tracking-wide',\n        size === 'sm' && 'text-xs px-1.5 py-0.5',\n        size === 'default' && 'text-sm px-2 py-1',\n        size === 'lg' && 'text-base px-3 py-1.5',\n        pulse && 'animate-pulse',\n        variant === 'default' && 'bg-blue-600/20 text-blue-300 border-blue-600/40 hover:bg-blue-600/30',\n        variant === 'secondary' && 'bg-yellow-600/20 text-yellow-300 border-yellow-600/40 hover:bg-yellow-600/30',\n        variant === 'outline' && 'bg-green-600/20 text-green-300 border-green-600/40 hover:bg-green-600/30',\n        variant === 'destructive' && 'bg-red-600/20 text-red-300 border-red-600/40 hover:bg-red-600/30',\n        className\n      )}\n    >\n      {text}\n    </Badge>\n  );\n}\n\nexport default BetaLabel;\n","import React, { useEffect } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport {\r\n  LayoutDashboard,\r\n  Lightbulb,\r\n  Code,\r\n  Users,\r\n  Search,\r\n  Brain,\r\n  MessageSquare,\r\n  X,\r\n  FileText,\r\n  Menu,\r\n  Target,\r\n  Shield\r\n} from \"lucide-react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Sheet, SheetContent } from \"@/components/ui/sheet\";\r\nimport { useAdmin } from \"@/contexts/AdminContext\";\r\nimport { BetaLabel } from \"@/components/ui/beta-label\";\r\n\r\ninterface SidebarItemProps {\r\n  icon: React.ElementType;\r\n  label: string;\r\n  path: string;\r\n  isActive: boolean;\r\n  onClick?: () => void;\r\n  isBeta?: boolean;\r\n  betaVariant?: 'default' | 'secondary' | 'outline' | 'destructive';\r\n}\r\n\r\nconst SidebarItem = ({ icon: Icon, label, path, isActive, onClick, isBeta, betaVariant = 'default' }: SidebarItemProps) => {\r\n  return (\r\n    <Link\r\n      to={path}\r\n      onClick={onClick}\r\n      className={`flex items-center gap-3 w-full px-3 py-2 rounded-md text-sm transition-all duration-200 ${\r\n        isActive\r\n          ? \"bg-green-600/20 text-green-400 border-l-2 border-green-400\"\r\n          : \"text-gray-400 hover:bg-black/30 hover:text-white hover:border-l-2 hover:border-green-500/50\"\r\n      }`}\r\n    >\r\n      <Icon className=\"h-5 w-5\" />\r\n      <span className=\"flex-1\">{label}</span>\r\n      {isBeta && (\r\n        <BetaLabel\r\n          variant={betaVariant}\r\n          size=\"sm\"\r\n          className=\"ml-auto\"\r\n        />\r\n      )}\r\n    </Link>\r\n  );\r\n};\r\n\r\ninterface WorkspaceSidebarProps {\r\n  isOpen?: boolean;\r\n  setIsOpen?: (open: boolean) => void;\r\n}\r\n\r\nconst WorkspaceSidebar = ({ isOpen = false, setIsOpen = () => {} }: WorkspaceSidebarProps) => {\r\n  const location = useLocation();\r\n  const currentPath = location.pathname;\r\n\r\n  const { isAdmin } = useAdmin();\r\n\r\n  const handleLinkClick = () => {\r\n    if (setIsOpen) {\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  // Close sidebar when route changes\r\n  useEffect(() => {\r\n    if (setIsOpen) {\r\n      setIsOpen(false);\r\n    }\r\n  }, [location.pathname, setIsOpen]);\r\n\r\n  const modules = [\r\n    { id: \"dashboard\", name: \"Dashboard\", icon: LayoutDashboard, path: \"/workspace\" },\r\n    { id: \"idea-vault\", name: \"Idea Vault\", icon: Lightbulb, path: \"/workspace/idea-vault\" },\r\n    { id: \"ideaforge\", name: \"IdeaForge\", icon: Target, path: \"/workspace/ideaforge\", isBeta: true, betaVariant: 'secondary' as const },\r\n    { id: \"mvp-studio\", name: \"MVP Studio\", icon: Code, path: \"/workspace/mvp-studio\" },\r\n    { id: \"ai-tools\", name: \"AI Tools Hub\", icon: Brain, path: \"/workspace/ai-tools\" },\r\n    { id: \"docs-decks\", name: \"Docs & Decks\", icon: FileText, path: \"/workspace/docs-decks\" },\r\n    { id: \"teamspace\", name: \"TeamSpace\", icon: Users, path: \"/workspace/teamspace\", isBeta: true, betaVariant: 'secondary' as const },\r\n    { id: \"investor-radar\", name: \"Investor Radar\", icon: Search, path: \"/workspace/investor-radar\", isBeta: true, betaVariant: 'secondary' as const },\r\n  ];\r\n\r\n  const sidebarContent = (\r\n    <div className=\"h-full flex flex-col workspace-sidebar\">\r\n      <div className=\"p-4 flex items-center border-b border-white/10\">\r\n        <div className=\"flex items-center gap-2\">\r\n          <div className=\"rounded-full bg-gradient-to-br from-green-500 to-green-600 w-8 h-8 flex items-center justify-center\">\r\n            <span className=\"font-bold text-white text-sm\">SW</span>\r\n          </div>\r\n          <div className=\"flex flex-col gap-1\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <span className=\"font-bold text-lg text-white\">StartWise</span>\r\n              <Badge\r\n                variant=\"secondary\"\r\n                className=\"bg-blue-600/20 text-blue-300 border-blue-600/40 text-xs font-semibold\"\r\n              >\r\n                BETA\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"px-2 py-4 flex-1 overflow-y-auto\">\r\n        <nav className=\"space-y-1\">\r\n          {modules.map((module) => (\r\n            <SidebarItem\r\n              key={module.id}\r\n              icon={module.icon}\r\n              label={module.name}\r\n              path={module.path}\r\n              onClick={handleLinkClick}\r\n              isBeta={module.isBeta}\r\n              betaVariant={module.betaVariant}\r\n              isActive={\r\n                module.path === \"/workspace\"\r\n                  ? currentPath === \"/workspace\"\r\n                  : currentPath.startsWith(module.path)\r\n              }\r\n            />\r\n          ))}\r\n\r\n          {/* Admin Panel Link - Only visible to admin users */}\r\n          {isAdmin && (\r\n            <>\r\n              <div className=\"my-4 border-t border-white/10\"></div>\r\n              <SidebarItem\r\n                icon={Shield}\r\n                label=\"Admin Panel\"\r\n                path=\"/admin\"\r\n                onClick={handleLinkClick}\r\n                isActive={currentPath.startsWith(\"/admin\")}\r\n              />\r\n            </>\r\n          )}\r\n        </nav>\r\n      </div>\r\n      <div className=\"p-4 border-t border-white/10\">\r\n        <div className=\"workspace-card p-4\">\r\n          <div className=\"flex items-center gap-2 mb-3\">\r\n            <div className=\"p-1.5 bg-green-500/20 rounded\">\r\n              <MessageSquare className=\"h-4 w-4 text-green-400\" />\r\n            </div>\r\n            <h4 className=\"text-sm font-medium text-white\">Founder's GPT</h4>\r\n          </div>\r\n          <p className=\"text-xs text-gray-400 mb-3\">\r\n            Get advice on your startup journey from your AI co-founder\r\n          </p>\r\n          <button className=\"w-full bg-black/50 hover:bg-black/70 px-3 py-2 rounded text-xs text-left text-gray-300 hover:text-white transition-colors border border-white/10\">\r\n            Ask Founder's GPT...\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // Use Sheet for both mobile and desktop for consistent off-canvas behavior\r\n  return (\r\n    <Sheet open={isOpen} onOpenChange={setIsOpen || (() => {})}>\r\n      <SheetContent\r\n        side=\"left\"\r\n        className=\"w-64 bg-black/95 backdrop-blur-xl border-r border-white/10 p-0 text-white\"\r\n      >\r\n        {sidebarContent}\r\n      </SheetContent>\r\n    </Sheet>\r\n  );\r\n};\r\n\r\n// Hamburger Menu Button Component\r\ninterface SidebarToggleProps {\r\n  onClick: () => void;\r\n  className?: string;\r\n}\r\n\r\nexport const SidebarToggle = ({ onClick, className }: SidebarToggleProps) => {\r\n  return (\r\n    <Button\r\n      variant=\"ghost\"\r\n      size=\"icon\"\r\n      className={`text-gray-400 hover:text-white hover:bg-black/30 ${className}`}\r\n      onClick={onClick}\r\n    >\r\n      <Menu className=\"h-5 w-5\" />\r\n      <span className=\"sr-only\">Toggle Sidebar</span>\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default WorkspaceSidebar;\r\n"],"names":["contactSchema","z","date","min","type","notes","outcome","optional","_ref","open","onClose","onSubmit","investor","form","useForm","resolver","zodResolver","defaultValues","Date","toISOString","split","_jsx","Dialog","onOpenChange","children","_jsxs","DialogContent","className","DialogHeader","DialogTitle","name","Form","_objectSpread","handleSubmit","data","reset","FormField","control","render","_ref2","field","FormItem","FormLabel","FormControl","Input","FormMessage","_ref3","Select","onValueChange","onChange","defaultValue","value","SelectTrigger","SelectValue","placeholder","SelectContent","SelectItem","_ref4","Textarea","_ref5","Button","variant","onClick","focus","concat","status","portfolio","stage","lastMeeting","contacts","length","map","contact","Card","CardContent","id","onLogContact","onStatusChange","isProfileOpen","setIsProfileOpen","useState","isLogContactOpen","setIsLogContactOpen","_Fragment","CardHeader","CardTitle","TooltipProvider","Tooltip","TooltipTrigger","asChild","getStatusClass","newStatus","TooltipContent","size","DialogDescription","InvestorProfile","LogContactModal","contactDetails","onAction","Users","Briefcase","Plus","investors","onAddInvestor","EmptyState","InvestorCard","fundingRoundSchema","target","raised","default","progress","number","max","int","timeline","roundData","fundingRounds","onAddFundingRound","isAddModalOpen","setIsAddModalOpen","round","style","width","ClockIcon","AddFundingRoundModal","PitchDeckView","ArrowUpRight","FileText","Presentation","Drawer","shouldScaleBackground","props","_objectWithoutProperties","_excluded","DrawerPrimitive","Root","displayName","Trigger","DrawerPortal","Portal","DrawerClose","Close","DrawerOverlay","React","ref","_excluded2","Overlay","cn","DrawerContent","_excluded3","Content","DrawerHeader","_excluded4","DrawerFooter","_excluded5","DrawerTitle","_ref6","_excluded6","Title","_ref7","_excluded7","Description","X","Checkbox","toLowerCase","Label","htmlFor","replace","timeframe","investorSchema","positive","investorData","_ref8","Search","e","searchQuery","onSearchChange","onFilterClick","onAddClick","SearchBar","Filter","activeTab","onTabChange","Tabs","TabsList","TabsTrigger","InvestorRadar","user","useAuth","sidebarOpen","setSidebarOpen","setActiveTab","setInvestors","setFundingRounds","setSearchQuery","filteredInvestors","setFilteredInvestors","isFilterOpen","setIsFilterOpen","isAddInvestorOpen","setIsAddInvestorOpen","loading","setLoading","toast","useToast","useEffect","async","error","investorRadarHelpers","getInvestors","console","title","description","loadInvestors","getFundingRounds","loadFundingRounds","filtered","filter","includes","WorkspaceSidebar","isOpen","setIsOpen","SidebarToggle","Link","to","ChevronLeft","Target","ActionBar","TabNavigation","TabsContent","InvestorsList","handleLogContact","handleUpdateInvestorStatus","updatedInvestors","FundingRoundsList","updatedRounds","FilterDrawer","AddInvestorModal","createInvestor","user_id","prev","blueprintZoneHelpers","blueprintZoneHelpersOriginal","userId","filters","allHelpers","investorRadar","updateInvestor","deleteInvestor","pitchPerfectHelpers","getPitchScripts","scriptType","pitchPerfect","createPitchScript","getPitchDecks","deckType","createPitchDeck","getPitchVideos","videoType","createPitchVideo","taskPlannerHelpers","getTasks","taskPlanner","createTask","updateTask","deleteTask","getProjects","createProject","docsDecksHelpers","ideaForgeHelpers","mvpStudioHelpers","workspaceHelpers","ideaVaultHelpers","teamSpaceHelpers","onboardingHelpers","profileHelpers","adminHelpers","subscriptionHelpers","FormProvider","FormFieldContext","Object","assign","_objectDestructuringEmpty","Provider","Controller","useFormField","fieldContext","itemContext","FormItemContext","getFieldState","formState","useFormContext","fieldState","Error","formItemId","formDescriptionId","formMessageId","Slot","FormDescription","body","String","message","BetaLabel","text","pulse","Badge","SidebarItem","icon","Icon","label","path","isActive","isBeta","betaVariant","Menu","location","useLocation","currentPath","pathname","isAdmin","useAdmin","handleLinkClick","modules","LayoutDashboard","Lightbulb","Code","Brain","sidebarContent","module","startsWith","Shield","MessageSquare","Sheet","SheetContent","side"],"sourceRoot":""}