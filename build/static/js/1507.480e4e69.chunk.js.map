{"version":3,"file":"static/js/1507.480e4e69.chunk.js","mappings":"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","sources":["lib/supabase-connection-helpers.ts","components/docs-decks/DocumentModal.tsx","components/docs-decks/PitchDeckCard.tsx","components/docs-decks/DocumentCard.tsx","components/docs-decks/TemplateCard.tsx","components/docs-decks/EmptyState.tsx","stores/presentationStore.ts","components/presentation/PresentationGenerator.tsx","components/presentation/PresentationCard.tsx","pages/DocsDecks.tsx","components/ui/beta-label.tsx","components/WorkspaceSidebar.tsx"],"sourcesContent":["// =====================================================\r\n// SUPABASE CONNECTION HELPERS\r\n// =====================================================\r\n// This file provides connection helpers for different modules\r\n// Re-exports from database-helpers for backward compatibility\r\n\r\nimport {\r\n  workspaceHelpers,\r\n  ideaVaultHelpers,\r\n  ideaForgeHelpers,\r\n  mvpStudioHelpers,\r\n  teamSpaceHelpers,\r\n  docsDecksHelpers,\r\n  onboardingHelpers,\r\n  profileHelpers,\r\n  adminHelpers,\r\n  subscriptionHelpers,\r\n  blueprintZoneHelpers as blueprintZoneHelpersOriginal,\r\n  allHelpers\r\n} from './database-helpers';\r\n\r\n// Re-export all helpers for backward compatibility\r\nexport const blueprintZoneHelpers = blueprintZoneHelpersOriginal;\r\nexport { docsDecksHelpers };\r\nexport { ideaForgeHelpers };\r\nexport const investorRadarHelpers = {\r\n  // Investor-specific helpers\r\n  async getInvestors(userId: string, filters?: unknown) {\r\n    return allHelpers.investorRadar.getInvestors(userId, filters);\r\n  },\r\n  async createInvestor(data: unknown) {\r\n    return allHelpers.investorRadar.createInvestor(data as any);\r\n  },\r\n  async updateInvestor(id: string, data: unknown) {\r\n    return allHelpers.investorRadar.updateInvestor(id, data);\r\n  },\r\n  async deleteInvestor(id: string) {\r\n    return allHelpers.investorRadar.deleteInvestor(id);\r\n  },\r\n  async getFundingRounds(userId: string) {\r\n    return allHelpers.investorRadar.getFundingRounds(userId);\r\n  }\r\n};\r\n\r\nexport { mvpStudioHelpers };\r\nexport const pitchPerfectHelpers = {\r\n  // Pitch Perfect specific helpers\r\n  async getPitchScripts(userId: string, scriptType?: string) {\r\n    return allHelpers.pitchPerfect.getPitchScripts(userId, scriptType);\r\n  },\r\n  async createPitchScript(data: unknown) {\r\n    return allHelpers.pitchPerfect.createPitchScript(data as any);\r\n  },\r\n  async getPitchDecks(userId: string, deckType?: string) {\r\n    return allHelpers.pitchPerfect.getPitchDecks(userId, deckType);\r\n  },\r\n  async createPitchDeck(data: unknown) {\r\n    return allHelpers.pitchPerfect.createPitchDeck(data as any);\r\n  },\r\n  async getPitchVideos(userId: string, videoType?: string) {\r\n    return allHelpers.pitchPerfect.getPitchVideos(userId, videoType);\r\n  },\r\n  async createPitchVideo(data: unknown) {\r\n    return allHelpers.pitchPerfect.createPitchVideo(data as any);\r\n  }\r\n};\r\n\r\nexport const taskPlannerHelpers = {\r\n  // Task Planner specific helpers\r\n  async getTasks(userId: string, filters?: { status?: string; priority?: string; projectId?: string }) {\r\n    return allHelpers.taskPlanner.getTasks(userId, filters);\r\n  },\r\n  async createTask(data: unknown) {\r\n    return allHelpers.taskPlanner.createTask(data as any);\r\n  },\r\n  async updateTask(id: string, data: unknown) {\r\n    return allHelpers.taskPlanner.updateTask(id, data);\r\n  },\r\n  async deleteTask(id: string) {\r\n    return allHelpers.taskPlanner.deleteTask(id);\r\n  },\r\n  async getProjects(userId: string) {\r\n    return allHelpers.taskPlanner.getProjects(userId);\r\n  },\r\n  async createProject(data: unknown) {\r\n    return allHelpers.taskPlanner.createProject(data as any);\r\n  }\r\n};\r\n\r\n// Export all helpers as a single object for convenience\r\nexport const connectionHelpers = {\r\n  blueprintZone: blueprintZoneHelpers,\r\n  docsDecks: docsDecksHelpers,\r\n  ideaForge: ideaForgeHelpers,\r\n  investorRadar: investorRadarHelpers,\r\n  mvpStudio: mvpStudioHelpers,\r\n  pitchPerfect: pitchPerfectHelpers,\r\n  taskPlanner: taskPlannerHelpers,\r\n  workspace: workspaceHelpers,\r\n  ideaVault: ideaVaultHelpers,\r\n  teamSpace: teamSpaceHelpers,\r\n  onboarding: onboardingHelpers,\r\n  profile: profileHelpers,\r\n  admin: adminHelpers,\r\n  subscription: subscriptionHelpers\r\n};\r\n\r\nexport default connectionHelpers;\r\n","\r\nimport React, { useState } from \"react\";\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from \"@/components/ui/dialog\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { FileText, Presentation, FilePieChart } from \"lucide-react\";\r\n\r\ntype DocumentType = \"deck\" | \"document\" | \"template\";\r\n\r\ninterface DocumentModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSave: (data: { title: string; description: string; type: DocumentType }) => void;\r\n}\r\n\r\nconst DocumentModal = ({ isOpen, onClose, onSave }: DocumentModalProps) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [docType, setDocType] = useState<DocumentType>(\"deck\");\r\n  const { toast } = useToast();\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!title.trim()) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Please enter a title for your document\",\r\n        variant: \"destructive\",\r\n      });\r\n      return;\r\n    }\r\n    \r\n    onSave({ title, description, type: docType });\r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"sm:max-w-md\">\r\n        <DialogHeader>\r\n          <DialogTitle>Create New Document</DialogTitle>\r\n        </DialogHeader>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"grid gap-4 py-4\">\r\n            <div className=\"flex gap-4 justify-between\">\r\n              <Button\r\n                type=\"button\"\r\n                variant={docType === \"deck\" ? \"default\" : \"outline\"}\r\n                className=\"flex-1 flex flex-col items-center gap-2 py-6\"\r\n                onClick={() => setDocType(\"deck\")}\r\n              >\r\n                <Presentation className=\"h-8 w-8\" />\r\n                <span>Pitch Deck</span>\r\n              </Button>\r\n              <Button\r\n                type=\"button\"\r\n                variant={docType === \"document\" ? \"default\" : \"outline\"}\r\n                className=\"flex-1 flex flex-col items-center gap-2 py-6\" \r\n                onClick={() => setDocType(\"document\")}\r\n              >\r\n                <FileText className=\"h-8 w-8\" />\r\n                <span>Document</span>\r\n              </Button>\r\n              <Button\r\n                type=\"button\"\r\n                variant={docType === \"template\" ? \"default\" : \"outline\"}\r\n                className=\"flex-1 flex flex-col items-center gap-2 py-6\"\r\n                onClick={() => setDocType(\"template\")}\r\n              >\r\n                <FilePieChart className=\"h-8 w-8\" />\r\n                <span>Template</span>\r\n              </Button>\r\n            </div>\r\n            \r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"title\">Title</Label>\r\n              <Input\r\n                id=\"title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                placeholder=\"Enter document title\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"description\">Description</Label>\r\n              <Input\r\n                id=\"description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                placeholder=\"Enter short description\"\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          <DialogFooter>\r\n            <Button type=\"button\" variant=\"outline\" onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button type=\"submit\">Create Document</Button>\r\n          </DialogFooter>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default DocumentModal;\r\n","\r\nimport React from \"react\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Copy, Download } from \"lucide-react\";\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\n\r\ninterface PitchDeckProps {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  lastEdited: string;\r\n  slides: number;\r\n  template: string;\r\n  onClick: () => void;\r\n}\r\n\r\nconst PitchDeckCard = ({ id, name, description, lastEdited, slides, template, onClick }: PitchDeckProps) => {\r\n  const { toast } = useToast();\r\n  \r\n  const handleCopy = (e: React.MouseEvent) => {\r\n    e.stopPropagation();\r\n    // Copy a mock share link to clipboard\r\n    navigator.clipboard.writeText(`https://app.example.com/share/deck/${id}`);\r\n    toast({\r\n      title: \"Link copied\",\r\n      description: \"Share link copied to clipboard\",\r\n    });\r\n  };\r\n  \r\n  const handleDownload = (e: React.MouseEvent) => {\r\n    e.stopPropagation();\r\n    toast({\r\n      title: \"Downloading\",\r\n      description: \"Your deck is being prepared for download\",\r\n    });\r\n    // Mock download functionality - in a real app, this would trigger an actual download\r\n  };\r\n  \r\n  return (\r\n    <Card \r\n      className=\"workspace-card hover:shadow-lg cursor-pointer transition-all duration-200 hover:scale-[1.01]\"\r\n      onClick={onClick}\r\n    >\r\n      <CardHeader className=\"pb-2\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <CardTitle className=\"truncate\" title={name}>{name}</CardTitle>\r\n          <div className=\"flex\">\r\n            <TooltipProvider>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <Button variant=\"ghost\" size=\"icon\" className=\"h-8 w-8\" onClick={handleCopy}>\r\n                    <Copy className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  <p>Copy share link</p>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n            </TooltipProvider>\r\n            \r\n            <TooltipProvider>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <Button variant=\"ghost\" size=\"icon\" className=\"h-8 w-8\" onClick={handleDownload}>\r\n                    <Download className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  <p>Download presentation</p>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n            </TooltipProvider>\r\n          </div>\r\n        </div>\r\n        <p className=\"text-sm text-muted-foreground\">{description}</p>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"flex justify-between text-sm text-muted-foreground mt-4\">\r\n          <span>Last edited: {lastEdited}</span>\r\n          <div className=\"flex items-center gap-3\">\r\n            <span>{slides} slides</span>\r\n            <span className=\"bg-primary/10 text-primary px-2 py-1 rounded-full text-xs\">\r\n              {template}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PitchDeckCard;\r\n","\r\nimport React from \"react\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Copy, Download, FileText, FileSpreadsheet, FilePieChart } from \"lucide-react\";\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\n\r\ninterface DocumentCardProps {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  type: string;\r\n  lastEdited: string;\r\n  pages: string | number;\r\n  onClick: () => void;\r\n}\r\n\r\nconst DocumentCard = ({ id, name, description, type, lastEdited, pages, onClick }: DocumentCardProps) => {\r\n  const { toast } = useToast();\r\n  \r\n  const handleCopy = (e: React.MouseEvent) => {\r\n    e.stopPropagation();\r\n    navigator.clipboard.writeText(`https://app.example.com/share/doc/${id}`);\r\n    toast({\r\n      title: \"Link copied\",\r\n      description: \"Share link copied to clipboard\",\r\n    });\r\n  };\r\n  \r\n  const handleDownload = (e: React.MouseEvent) => {\r\n    e.stopPropagation();\r\n    toast({\r\n      title: \"Downloading\",\r\n      description: \"Your document is being prepared for download\",\r\n    });\r\n    // Mock download functionality\r\n  };\r\n  \r\n  const getIcon = () => {\r\n    if (type === \"Document\" || type === \"One-pager\") return <FileText className=\"h-5 w-5 text-primary\" />;\r\n    if (type === \"Research\") return <FilePieChart className=\"h-5 w-5 text-blue-400\" />;\r\n    if (type === \"Spreadsheet\") return <FileSpreadsheet className=\"h-5 w-5 text-yellow-400\" />;\r\n    return <FileText className=\"h-5 w-5\" />;\r\n  };\r\n  \r\n  return (\r\n    <Card className=\"workspace-card hover:shadow-lg cursor-pointer transition-all duration-200\" onClick={onClick}>\r\n      <CardContent className=\"p-4 flex items-center justify-between\">\r\n        <div className=\"flex items-center gap-4\">\r\n          <div className=\"h-10 w-10 bg-white/5 rounded-lg flex items-center justify-center\">\r\n            {getIcon()}\r\n          </div>\r\n          <div>\r\n            <h3 className=\"font-medium\">{name}</h3>\r\n            <p className=\"text-sm text-muted-foreground\">{description}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex items-center gap-6\">\r\n          <div className=\"text-right\">\r\n            <div className=\"text-sm text-muted-foreground\">{lastEdited}</div>\r\n            <div className=\"text-xs text-muted-foreground\">{pages} {type !== \"Spreadsheet\" ? \"pages\" : \"\"}</div>\r\n          </div>\r\n          <div className=\"flex\">\r\n            <TooltipProvider>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <Button variant=\"ghost\" size=\"icon\" className=\"h-8 w-8\" onClick={handleCopy}>\r\n                    <Copy className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  <p>Copy share link</p>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n            </TooltipProvider>\r\n            \r\n            <TooltipProvider>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <Button variant=\"ghost\" size=\"icon\" className=\"h-8 w-8\" onClick={handleDownload}>\r\n                    <Download className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                  <p>Download document</p>\r\n                </TooltipContent>\r\n              </Tooltip>\r\n            </TooltipProvider>\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DocumentCard;\r\n","\r\nimport React from \"react\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { LucideIcon } from \"lucide-react\";\r\n\r\ninterface TemplateCardProps {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  category: string;\r\n  icon: LucideIcon;\r\n}\r\n\r\nconst TemplateCard = ({ name, description, icon: Icon }: TemplateCardProps) => {\r\n  return (\r\n    <Card className=\"workspace-card hover:shadow-lg cursor-pointer transition-all duration-200\">\r\n      <CardContent className=\"p-6 flex items-center gap-4\">\r\n        <div className=\"h-12 w-12 rounded-lg bg-white/5 flex items-center justify-center\">\r\n          <Icon className=\"h-6 w-6 text-primary\" />\r\n        </div>\r\n        <div className=\"flex-grow\">\r\n          <h3 className=\"text-lg font-medium\">{name}</h3>\r\n          <p className=\"text-sm text-muted-foreground\">{description}</p>\r\n        </div>\r\n        <Button size=\"sm\">Use</Button>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TemplateCard;\r\n","\r\nimport React from \"react\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { FileText, Presentation, Plus } from \"lucide-react\";\r\n\r\ninterface EmptyStateProps {\r\n  type: \"decks\" | \"documents\";\r\n  onCreateNew: () => void;\r\n}\r\n\r\nconst EmptyState = ({ type, onCreateNew }: EmptyStateProps) => {\r\n  return (\r\n    <Card className=\"workspace-card p-6 text-center\">\r\n      <CardContent className=\"py-16\">\r\n        <div className=\"rounded-full bg-primary/20 p-4 mx-auto mb-6 w-16 h-16 flex items-center justify-center animate-float\">\r\n          {type === \"decks\" ? (\r\n            <Presentation className=\"h-8 w-8 text-primary\" />\r\n          ) : (\r\n            <FileText className=\"h-8 w-8 text-primary\" />\r\n          )}\r\n        </div>\r\n        <h3 className=\"text-2xl font-medium mb-4\">\r\n          {type === \"decks\" ? \"No Pitch Decks Yet\" : \"No Documents Yet\"}\r\n        </h3>\r\n        <p className=\"text-muted-foreground mb-8 max-w-md mx-auto\">\r\n          {type === \"decks\"\r\n            ? \"Create your first pitch deck to impress investors, partners or customers.\"\r\n            : \"Create your first document to organize your startup's plans and research.\"}\r\n        </p>\r\n        <Button onClick={onCreateNew}>\r\n          <Plus className=\"h-4 w-4 mr-2\" />\r\n          {type === \"decks\" ? \"Create Your First Deck\" : \"Create Your First Document\"}\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EmptyState;\r\n","// Presentation Store - Adapted for our application using Zustand\n\nimport { create } from 'zustand';\nimport { \n  Presentation, \n  PresentationState, \n  ThemeType, \n  ThemeProperties, \n  PresentationStyle, \n  PageStyle,\n  PresentationGenerationProgress,\n  Slide\n} from '@/types/presentation';\n\ninterface PresentationStore extends PresentationState {\n  // Actions\n  setCurrentPresentation: (presentation: Presentation | null) => void;\n  setCurrentPresentationId: (id: string | null) => void;\n  setIsGridView: (isGrid: boolean) => void;\n  setIsSheetOpen: (isOpen: boolean) => void;\n  setIsPresenting: (isPresenting: boolean) => void;\n  setCurrentSlideIndex: (index: number) => void;\n  setIsThemeCreatorOpen: (isOpen: boolean) => void;\n  setShouldShowExitHeader: (show: boolean) => void;\n  \n  // Generation actions\n  setIsGeneratingOutline: (isGenerating: boolean) => void;\n  setIsGeneratingPresentation: (isGenerating: boolean) => void;\n  setGenerationProgress: (progress: PresentationGenerationProgress | null) => void;\n  startOutlineGeneration: () => void;\n  startPresentationGeneration: () => void;\n  resetGeneration: () => void;\n  \n  // Form actions\n  setPresentationInput: (input: string) => void;\n  setNumSlides: (num: number) => void;\n  setTheme: (theme: ThemeType, customData?: ThemeProperties | null) => void;\n  setLanguage: (language: string) => void;\n  setPageStyle: (style: PageStyle) => void;\n  setPresentationStyle: (style: PresentationStyle) => void;\n  setImageModel: (model: string) => void;\n  \n  // Selection actions\n  toggleSelecting: () => void;\n  selectAllPresentations: (ids: string[]) => void;\n  deselectAllPresentations: () => void;\n  togglePresentationSelection: (id: string) => void;\n  \n  // Saving actions\n  setSavingStatus: (status: 'idle' | 'saving' | 'saved' | 'error') => void;\n  \n  // Slide navigation\n  nextSlide: () => void;\n  previousSlide: () => void;\n  goToSlide: (index: number) => void;\n  \n  // Slide management\n  addSlide: (slide: Slide, index?: number) => void;\n  removeSlide: (slideId: string) => void;\n  updateSlide: (slideId: string, updates: Partial<Slide>) => void;\n  reorderSlides: (fromIndex: number, toIndex: number) => void;\n}\n\nexport const usePresentationStore = create<PresentationStore>((set, get) => ({\n  // Initial state\n  currentPresentationId: null,\n  currentPresentation: null,\n  isGridView: true,\n  isSheetOpen: false,\n  isPresenting: false,\n  currentSlideIndex: 0,\n  isThemeCreatorOpen: false,\n  shouldShowExitHeader: false,\n  \n  // Generation state\n  isGeneratingOutline: false,\n  isGeneratingPresentation: false,\n  generationProgress: null,\n  \n  // Form state\n  presentationInput: '',\n  numSlides: 10,\n  theme: 'mystique',\n  customThemeData: null,\n  language: 'en-US',\n  pageStyle: 'default',\n  presentationStyle: 'professional',\n  imageModel: 'dall-e-3',\n  \n  // Selection state\n  isSelecting: false,\n  selectedPresentations: [],\n  \n  // Saving state\n  savingStatus: 'idle',\n  \n  // Actions\n  setCurrentPresentation: (presentation) => \n    set({ \n      currentPresentation: presentation,\n      currentPresentationId: presentation?.id || null,\n      currentSlideIndex: 0\n    }),\n    \n  setCurrentPresentationId: (id) => \n    set({ currentPresentationId: id }),\n    \n  setIsGridView: (isGrid) => \n    set({ isGridView: isGrid }),\n    \n  setIsSheetOpen: (isOpen) => \n    set({ isSheetOpen: isOpen }),\n    \n  setIsPresenting: (isPresenting) => \n    set({ isPresenting }),\n    \n  setCurrentSlideIndex: (index) => \n    set({ currentSlideIndex: index }),\n    \n  setIsThemeCreatorOpen: (isOpen) => \n    set({ isThemeCreatorOpen: isOpen }),\n    \n  setShouldShowExitHeader: (show) => \n    set({ shouldShowExitHeader: show }),\n  \n  // Generation actions\n  setIsGeneratingOutline: (isGenerating) => \n    set({ isGeneratingOutline: isGenerating }),\n    \n  setIsGeneratingPresentation: (isGenerating) => \n    set({ isGeneratingPresentation: isGenerating }),\n    \n  setGenerationProgress: (progress) => \n    set({ generationProgress: progress }),\n    \n  startOutlineGeneration: () => \n    set({ \n      isGeneratingOutline: true,\n      isGeneratingPresentation: false,\n      generationProgress: {\n        stage: 'outline',\n        currentSlide: 0,\n        totalSlides: get().numSlides,\n        message: 'Generating presentation outline...',\n        progress: 0\n      }\n    }),\n    \n  startPresentationGeneration: () => \n    set({ \n      isGeneratingPresentation: true,\n      generationProgress: {\n        stage: 'slides',\n        currentSlide: 0,\n        totalSlides: get().numSlides,\n        message: 'Generating slides...',\n        progress: 0\n      }\n    }),\n    \n  resetGeneration: () => \n    set({ \n      isGeneratingOutline: false,\n      isGeneratingPresentation: false,\n      generationProgress: null\n    }),\n  \n  // Form actions\n  setPresentationInput: (input) => \n    set({ presentationInput: input }),\n    \n  setNumSlides: (num) => \n    set({ numSlides: num }),\n    \n  setTheme: (theme, customData = null) => \n    set({ theme, customThemeData: customData }),\n    \n  setLanguage: (language) => \n    set({ language }),\n    \n  setPageStyle: (style) => \n    set({ pageStyle: style }),\n    \n  setPresentationStyle: (style) => \n    set({ presentationStyle: style }),\n    \n  setImageModel: (model) => \n    set({ imageModel: model }),\n  \n  // Selection actions\n  toggleSelecting: () => \n    set((state) => ({ \n      isSelecting: !state.isSelecting,\n      selectedPresentations: []\n    })),\n    \n  selectAllPresentations: (ids) => \n    set({ selectedPresentations: ids }),\n    \n  deselectAllPresentations: () => \n    set({ selectedPresentations: [] }),\n    \n  togglePresentationSelection: (id) => \n    set((state) => ({\n      selectedPresentations: state.selectedPresentations.includes(id)\n        ? state.selectedPresentations.filter(p => p !== id)\n        : [...state.selectedPresentations, id]\n    })),\n  \n  // Saving actions\n  setSavingStatus: (status) => \n    set({ savingStatus: status }),\n  \n  // Slide navigation\n  nextSlide: () => \n    set((state) => ({\n      currentSlideIndex: Math.min(\n        state.currentSlideIndex + 1,\n        (state.currentPresentation?.slides.length || 1) - 1\n      )\n    })),\n    \n  previousSlide: () => \n    set((state) => ({\n      currentSlideIndex: Math.max(state.currentSlideIndex - 1, 0)\n    })),\n    \n  goToSlide: (index) => \n    set((state) => ({\n      currentSlideIndex: Math.max(0, Math.min(\n        index,\n        (state.currentPresentation?.slides.length || 1) - 1\n      ))\n    })),\n  \n  // Slide management\n  addSlide: (slide, index) => \n    set((state) => {\n      if (!state.currentPresentation) return state;\n      \n      const slides = [...state.currentPresentation.slides];\n      const insertIndex = index !== undefined ? index : slides.length;\n      slides.splice(insertIndex, 0, slide);\n      \n      return {\n        currentPresentation: {\n          ...state.currentPresentation,\n          slides,\n          totalSlides: slides.length\n        }\n      };\n    }),\n    \n  removeSlide: (slideId) => \n    set((state) => {\n      if (!state.currentPresentation) return state;\n      \n      const slides = state.currentPresentation.slides.filter(s => s.id !== slideId);\n      \n      return {\n        currentPresentation: {\n          ...state.currentPresentation,\n          slides,\n          totalSlides: slides.length\n        },\n        currentSlideIndex: Math.min(state.currentSlideIndex, slides.length - 1)\n      };\n    }),\n    \n  updateSlide: (slideId, updates) => \n    set((state) => {\n      if (!state.currentPresentation) return state;\n      \n      const slides = state.currentPresentation.slides.map(slide =>\n        slide.id === slideId ? { ...slide, ...updates } : slide\n      );\n      \n      return {\n        currentPresentation: {\n          ...state.currentPresentation,\n          slides\n        }\n      };\n    }),\n    \n  reorderSlides: (fromIndex, toIndex) => \n    set((state) => {\n      if (!state.currentPresentation) return state;\n      \n      const slides = [...state.currentPresentation.slides];\n      const [movedSlide] = slides.splice(fromIndex, 1);\n      slides.splice(toIndex, 0, movedSlide);\n      \n      // Update order property\n      slides.forEach((slide, index) => {\n        slide.order = index;\n      });\n      \n      return {\n        currentPresentation: {\n          ...state.currentPresentation,\n          slides\n        }\n      };\n    }),\n}));\n","// Presentation Generator Component - Main AI presentation generation interface\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Progress } from '@/components/ui/progress';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport { useToast } from '@/hooks/use-toast';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { usePresentationStore } from '@/stores/presentationStore';\nimport { presentationService } from '@/services/presentationService';\nimport { \n  Sparkles, \n  Presentation, \n  Clock, \n  Users, \n  Target, \n  Globe,\n  Palette,\n  Wand2,\n  ArrowRight,\n  Loader2\n} from 'lucide-react';\nimport { OutlineGenerationRequest, PresentationStyle } from '@/types/presentation';\nimport { themeList } from '@/lib/presentation/themes';\n\ninterface PresentationGeneratorProps {\n  onPresentationGenerated?: (presentationId: string) => void;\n  ideaId?: string;\n}\n\nconst PresentationGenerator: React.FC<PresentationGeneratorProps> = ({\n  onPresentationGenerated,\n  ideaId\n}) => {\n  const navigate = useNavigate();\n  const { toast } = useToast();\n  const { user } = useAuth();\n  \n  const {\n    presentationInput,\n    numSlides,\n    language,\n    presentationStyle,\n    theme,\n    isGeneratingOutline,\n    isGeneratingPresentation,\n    generationProgress,\n    setPresentationInput,\n    setNumSlides,\n    setLanguage,\n    setPresentationStyle,\n    setTheme,\n    startOutlineGeneration,\n    startPresentationGeneration,\n    resetGeneration\n  } = usePresentationStore();\n\n  const [targetAudience, setTargetAudience] = useState('');\n  const [objectives, setObjectives] = useState('');\n  const [duration, setDuration] = useState(15);\n  const [step, setStep] = useState<'input' | 'generating' | 'complete'>('input');\n\n  const handleGenerate = async () => {\n    if (!user) {\n      toast({\n        title: \"Authentication Required\",\n        description: \"Please sign in to generate presentations.\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    if (!presentationInput.trim()) {\n      toast({\n        title: \"Topic Required\",\n        description: \"Please enter a topic for your presentation.\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n\n    setStep('generating');\n    startOutlineGeneration();\n\n    try {\n      const request: OutlineGenerationRequest = {\n        topic: presentationInput,\n        numSlides,\n        language,\n        style: presentationStyle,\n        targetAudience: targetAudience || undefined,\n        objectives: objectives ? objectives.split(',').map(o => o.trim()) : undefined,\n        duration\n      };\n\n      const { data: presentation, error } = await presentationService.generatePresentationFromAI(\n        user.id,\n        request,\n        (stage, current, total, message) => {\n          if (stage === 'slides') {\n            startPresentationGeneration();\n          }\n          // Update progress in store if needed\n        }\n      );\n\n      if (error || !presentation) {\n        throw new Error((error as Error)?.message || 'Failed to generate presentation');\n      }\n\n      // Save the generated presentation\n      const { data: savedPresentation, error: saveError } = await presentationService.saveGeneratedPresentation(\n        user.id,\n        presentation,\n        ideaId\n      );\n\n      if (saveError || !savedPresentation) {\n        throw new Error((saveError as Error)?.message || 'Failed to save presentation');\n      }\n\n      setStep('complete');\n      resetGeneration();\n\n      toast({\n        title: \"Presentation Generated!\",\n        description: `Successfully created \"${presentation.title}\" with ${presentation.totalSlides} slides.`,\n      });\n\n      // Navigate to editor or call callback\n      if (onPresentationGenerated) {\n        onPresentationGenerated(savedPresentation.id);\n      } else {\n        navigate(`/workspace/docs-decks/presentation/${savedPresentation.id}`);\n      }\n\n    } catch (error: unknown) {\n      console.error('Error generating presentation:', error);\n      setStep('input');\n      resetGeneration();\n      \n      toast({\n        title: \"Generation Failed\",\n        description: (error as Error).message || \"Failed to generate presentation. Please try again.\",\n        variant: \"destructive\"\n      });\n    }\n  };\n\n  const handleReset = () => {\n    setStep('input');\n    resetGeneration();\n    setPresentationInput('');\n    setTargetAudience('');\n    setObjectives('');\n  };\n\n  if (step === 'generating') {\n    return (\n      <Card className=\"w-full max-w-2xl mx-auto\">\n        <CardHeader className=\"text-center\">\n          <CardTitle className=\"flex items-center justify-center gap-2\">\n            <Wand2 className=\"h-6 w-6 text-purple-500 animate-pulse\" />\n            Generating Your Presentation\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          <div className=\"text-center\">\n            <div className=\"text-lg font-medium mb-2\">\n              {isGeneratingOutline ? 'Creating outline...' : 'Generating slides...'}\n            </div>\n            <div className=\"text-sm text-muted-foreground\">\n              {generationProgress?.message || 'Please wait while we create your presentation'}\n            </div>\n          </div>\n          \n          <Progress \n            value={generationProgress?.progress || 0} \n            className=\"w-full\"\n          />\n          \n          <div className=\"flex items-center justify-center gap-4 text-sm text-muted-foreground\">\n            <div className=\"flex items-center gap-2\">\n              <Loader2 className=\"h-4 w-4 animate-spin\" />\n              AI Processing\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Presentation className=\"h-4 w-4\" />\n              {numSlides} Slides\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Clock className=\"h-4 w-4\" />\n              ~{duration} min\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"w-full max-w-2xl mx-auto\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Sparkles className=\"h-6 w-6 text-purple-500\" />\n          AI Presentation Generator\n        </CardTitle>\n        <p className=\"text-muted-foreground\">\n          Create professional presentations with AI assistance\n        </p>\n      </CardHeader>\n      \n      <CardContent className=\"space-y-6\">\n        {/* Topic Input */}\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"topic\">Presentation Topic *</Label>\n          <Textarea\n            id=\"topic\"\n            placeholder=\"Enter your presentation topic (e.g., 'Introduction to Machine Learning for Beginners')\"\n            value={presentationInput}\n            onChange={(e) => setPresentationInput(e.target.value)}\n            rows={3}\n            className=\"resize-none\"\n          />\n        </div>\n\n        {/* Configuration Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          {/* Number of Slides */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"slides\">Number of Slides</Label>\n            <Select value={numSlides.toString()} onValueChange={(value) => setNumSlides(parseInt(value))}>\n              <SelectTrigger>\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                {[5, 8, 10, 12, 15, 20].map(num => (\n                  <SelectItem key={num} value={num.toString()}>\n                    {num} slides\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Duration */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"duration\">Duration (minutes)</Label>\n            <Select value={duration.toString()} onValueChange={(value) => setDuration(parseInt(value))}>\n              <SelectTrigger>\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                {[5, 10, 15, 20, 30, 45, 60].map(mins => (\n                  <SelectItem key={mins} value={mins.toString()}>\n                    {mins} minutes\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Style */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"style\">Presentation Style</Label>\n            <Select value={presentationStyle} onValueChange={(value) => setPresentationStyle(value as PresentationStyle)}>\n              <SelectTrigger>\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"professional\">Professional</SelectItem>\n                <SelectItem value=\"casual\">Casual</SelectItem>\n                <SelectItem value=\"creative\">Creative</SelectItem>\n                <SelectItem value=\"academic\">Academic</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Language */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"language\">Language</Label>\n            <Select value={language} onValueChange={setLanguage}>\n              <SelectTrigger>\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"en-US\">English</SelectItem>\n                <SelectItem value=\"es-ES\">Spanish</SelectItem>\n                <SelectItem value=\"fr-FR\">French</SelectItem>\n                <SelectItem value=\"de-DE\">German</SelectItem>\n                <SelectItem value=\"pt-BR\">Portuguese</SelectItem>\n                <SelectItem value=\"zh-CN\">Chinese</SelectItem>\n                <SelectItem value=\"ja-JP\">Japanese</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n        </div>\n\n        <Separator />\n\n        {/* Optional Fields */}\n        <div className=\"space-y-4\">\n          <h4 className=\"font-medium flex items-center gap-2\">\n            <Target className=\"h-4 w-4\" />\n            Optional Details\n          </h4>\n          \n          <div className=\"space-y-2\">\n            <Label htmlFor=\"audience\">Target Audience</Label>\n            <Input\n              id=\"audience\"\n              placeholder=\"e.g., Business executives, Students, General public\"\n              value={targetAudience}\n              onChange={(e) => setTargetAudience(e.target.value)}\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"objectives\">Learning Objectives</Label>\n            <Input\n              id=\"objectives\"\n              placeholder=\"e.g., Understand basics, Learn implementation, Gain insights (comma-separated)\"\n              value={objectives}\n              onChange={(e) => setObjectives(e.target.value)}\n            />\n          </div>\n        </div>\n\n        {/* Theme Preview */}\n        <div className=\"space-y-2\">\n          <Label className=\"flex items-center gap-2\">\n            <Palette className=\"h-4 w-4\" />\n            Theme\n          </Label>\n          <div className=\"grid grid-cols-3 gap-2\">\n            {themeList.slice(0, 6).map((themeOption) => (\n              <button\n                key={themeOption.id}\n                onClick={() => setTheme(themeOption.id as any)}\n                className={`p-3 rounded-lg border-2 transition-all ${\n                  theme === themeOption.id \n                    ? 'border-purple-500 bg-purple-50' \n                    : 'border-gray-200 hover:border-gray-300'\n                }`}\n              >\n                <div \n                  className=\"w-full h-8 rounded mb-2\"\n                  style={{ backgroundColor: themeOption.colors.primary }}\n                />\n                <div className=\"text-xs font-medium\">{themeOption.name}</div>\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Generate Button */}\n        <Button \n          onClick={handleGenerate}\n          disabled={!presentationInput.trim() || isGeneratingOutline || isGeneratingPresentation}\n          className=\"w-full\"\n          size=\"lg\"\n        >\n          {isGeneratingOutline || isGeneratingPresentation ? (\n            <>\n              <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n              Generating...\n            </>\n          ) : (\n            <>\n              <Wand2 className=\"h-4 w-4 mr-2\" />\n              Generate Presentation\n              <ArrowRight className=\"h-4 w-4 ml-2\" />\n            </>\n          )}\n        </Button>\n\n        {/* Info */}\n        <div className=\"text-xs text-muted-foreground text-center\">\n          Generation typically takes 1-3 minutes depending on the number of slides\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default PresentationGenerator;\n","// Presentation Card Component - Display presentation in grid/list view\n\nimport React from 'react';\nimport { Card, CardContent, CardHeader } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { \n  DropdownMenu, \n  DropdownMenuContent, \n  DropdownMenuItem, \n  DropdownMenuTrigger,\n  DropdownMenuSeparator\n} from '@/components/ui/dropdown-menu';\nimport {\n  Presentation,\n  MoreHorizontal,\n  Eye,\n  Edit,\n  Share,\n  Download,\n  Copy,\n  Trash2,\n  Clock,\n  Users,\n  Sparkles,\n  Calendar\n} from 'lucide-react';\nimport { Presentation as PresentationType } from '@/types/presentation';\nimport { getTheme } from '@/lib/presentation/themes';\nimport { formatDistanceToNow } from 'date-fns';\n\ninterface PresentationCardProps {\n  presentation: PresentationType;\n  onClick: () => void;\n  onEdit?: () => void;\n  onDuplicate?: () => void;\n  onShare?: () => void;\n  onDelete?: () => void;\n  onDownload?: () => void;\n  viewMode?: 'grid' | 'list';\n  isSelected?: boolean;\n  onSelect?: (selected: boolean) => void;\n}\n\nconst PresentationCard: React.FC<PresentationCardProps> = ({\n  presentation,\n  onClick,\n  onEdit,\n  onDuplicate,\n  onShare,\n  onDelete,\n  onDownload,\n  viewMode = 'grid',\n  isSelected = false,\n  onSelect\n}) => {\n  const theme = getTheme(presentation.theme, presentation.customTheme);\n  \n  const handleCardClick = (e: React.MouseEvent) => {\n    // Don't trigger onClick if clicking on dropdown or select checkbox\n    if ((e.target as HTMLElement).closest('[data-dropdown]') || \n        (e.target as HTMLElement).closest('[data-select]')) {\n      return;\n    }\n    onClick();\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'published': return 'bg-green-100 text-green-800';\n      case 'draft': return 'bg-yellow-100 text-yellow-800';\n      case 'archived': return 'bg-gray-100 text-gray-800';\n      default: return 'bg-blue-100 text-blue-800';\n    }\n  };\n\n  if (viewMode === 'list') {\n    return (\n      <Card \n        className={`cursor-pointer transition-all duration-200 hover:shadow-md ${\n          isSelected ? 'ring-2 ring-purple-500' : ''\n        }`}\n        onClick={handleCardClick}\n      >\n        <CardContent className=\"p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4 flex-1\">\n              {/* Selection Checkbox */}\n              {onSelect && (\n                <div data-select>\n                  <input\n                    type=\"checkbox\"\n                    checked={isSelected}\n                    onChange={(e) => onSelect(e.target.checked)}\n                    className=\"rounded border-gray-300\"\n                  />\n                </div>\n              )}\n\n              {/* Presentation Preview */}\n              <div \n                className=\"w-16 h-12 rounded-lg flex items-center justify-center text-white text-xs font-medium\"\n                style={{ backgroundColor: (theme as any).colors.primary }}\n              >\n                <Presentation className=\"h-6 w-6\" />\n              </div>\n\n              {/* Presentation Info */}\n              <div className=\"flex-1 min-w-0\">\n                <div className=\"flex items-center gap-2 mb-1\">\n                  <h3 className=\"font-semibold text-lg truncate\">{presentation.title}</h3>\n                  <Badge className={getStatusColor(presentation.status)}>\n                    {presentation.status}\n                  </Badge>\n                  {presentation.outline && (\n                    <Badge variant=\"outline\" className=\"text-purple-600\">\n                      <Sparkles className=\"h-3 w-3 mr-1\" />\n                      AI Generated\n                    </Badge>\n                  )}\n                </div>\n                \n                {presentation.description && (\n                  <p className=\"text-sm text-muted-foreground truncate mb-2\">\n                    {presentation.description}\n                  </p>\n                )}\n\n                <div className=\"flex items-center gap-4 text-xs text-muted-foreground\">\n                  <div className=\"flex items-center gap-1\">\n                    <Presentation className=\"h-3 w-3\" />\n                    {presentation.totalSlides} slides\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <Clock className=\"h-3 w-3\" />\n                    {presentation.estimatedDuration || 15} min\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <Calendar className=\"h-3 w-3\" />\n                    {formatDistanceToNow(new Date(presentation.updatedAt), { addSuffix: true })}\n                  </div>\n                  {presentation.targetAudience && (\n                    <div className=\"flex items-center gap-1\">\n                      <Users className=\"h-3 w-3\" />\n                      {presentation.targetAudience}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            {/* Actions */}\n            <div className=\"flex items-center gap-2\">\n              <Button variant=\"outline\" size=\"sm\" onClick={onClick}>\n                <Eye className=\"h-4 w-4 mr-1\" />\n                View\n              </Button>\n              \n              <DropdownMenu>\n                <DropdownMenuTrigger asChild data-dropdown>\n                  <Button variant=\"ghost\" size=\"sm\">\n                    <MoreHorizontal className=\"h-4 w-4\" />\n                  </Button>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent align=\"end\">\n                  {onEdit && (\n                    <DropdownMenuItem onClick={onEdit}>\n                      <Edit className=\"h-4 w-4 mr-2\" />\n                      Edit\n                    </DropdownMenuItem>\n                  )}\n                  {onDuplicate && (\n                    <DropdownMenuItem onClick={onDuplicate}>\n                      <Copy className=\"h-4 w-4 mr-2\" />\n                      Duplicate\n                    </DropdownMenuItem>\n                  )}\n                  {onShare && (\n                    <DropdownMenuItem onClick={onShare}>\n                      <Share className=\"h-4 w-4 mr-2\" />\n                      Share\n                    </DropdownMenuItem>\n                  )}\n                  {onDownload && (\n                    <DropdownMenuItem onClick={onDownload}>\n                      <Download className=\"h-4 w-4 mr-2\" />\n                      Download\n                    </DropdownMenuItem>\n                  )}\n                  {onDelete && (\n                    <>\n                      <DropdownMenuSeparator />\n                      <DropdownMenuItem onClick={onDelete} className=\"text-red-600\">\n                        <Trash2 className=\"h-4 w-4 mr-2\" />\n                        Delete\n                      </DropdownMenuItem>\n                    </>\n                  )}\n                </DropdownMenuContent>\n              </DropdownMenu>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  // Grid view\n  return (\n    <Card \n      className={`cursor-pointer transition-all duration-200 hover:shadow-lg hover:scale-105 ${\n        isSelected ? 'ring-2 ring-purple-500' : ''\n      }`}\n      onClick={handleCardClick}\n    >\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex items-start justify-between\">\n          <div className=\"flex-1 min-w-0\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <Badge className={getStatusColor(presentation.status)}>\n                {presentation.status}\n              </Badge>\n              {presentation.outline && (\n                <Badge variant=\"outline\" className=\"text-purple-600\">\n                  <Sparkles className=\"h-3 w-3 mr-1\" />\n                  AI\n                </Badge>\n              )}\n            </div>\n            <h3 className=\"font-semibold text-lg leading-tight truncate\">\n              {presentation.title}\n            </h3>\n          </div>\n\n          <div className=\"flex items-center gap-1\">\n            {onSelect && (\n              <div data-select>\n                <input\n                  type=\"checkbox\"\n                  checked={isSelected}\n                  onChange={(e) => onSelect(e.target.checked)}\n                  className=\"rounded border-gray-300\"\n                />\n              </div>\n            )}\n            \n            <DropdownMenu>\n              <DropdownMenuTrigger asChild data-dropdown>\n                <Button variant=\"ghost\" size=\"sm\">\n                  <MoreHorizontal className=\"h-4 w-4\" />\n                </Button>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent align=\"end\">\n                {onEdit && (\n                  <DropdownMenuItem onClick={onEdit}>\n                    <Edit className=\"h-4 w-4 mr-2\" />\n                    Edit\n                  </DropdownMenuItem>\n                )}\n                {onDuplicate && (\n                  <DropdownMenuItem onClick={onDuplicate}>\n                    <Copy className=\"h-4 w-4 mr-2\" />\n                    Duplicate\n                  </DropdownMenuItem>\n                )}\n                {onShare && (\n                  <DropdownMenuItem onClick={onShare}>\n                    <Share className=\"h-4 w-4 mr-2\" />\n                    Share\n                  </DropdownMenuItem>\n                )}\n                {onDownload && (\n                  <DropdownMenuItem onClick={onDownload}>\n                    <Download className=\"h-4 w-4 mr-2\" />\n                    Download\n                  </DropdownMenuItem>\n                )}\n                {onDelete && (\n                  <>\n                    <DropdownMenuSeparator />\n                    <DropdownMenuItem onClick={onDelete} className=\"text-red-600\">\n                      <Trash2 className=\"h-4 w-4 mr-2\" />\n                      Delete\n                    </DropdownMenuItem>\n                  </>\n                )}\n              </DropdownMenuContent>\n            </DropdownMenu>\n          </div>\n        </div>\n      </CardHeader>\n\n      <CardContent className=\"pt-0\">\n        {/* Presentation Preview */}\n        <div \n          className=\"w-full h-32 rounded-lg mb-4 flex items-center justify-center text-white relative overflow-hidden\"\n          style={{ \n            background: `linear-gradient(135deg, ${(theme as any).colors.primary}, ${(theme as any).colors.secondary})`\n          }}\n        >\n          <Presentation className=\"h-12 w-12 opacity-80\" />\n          <div className=\"absolute bottom-2 right-2 bg-black/20 rounded px-2 py-1 text-xs\">\n            {presentation.totalSlides} slides\n          </div>\n        </div>\n\n        {/* Description */}\n        {presentation.description && (\n          <p className=\"text-sm text-muted-foreground mb-3 line-clamp-2\">\n            {presentation.description}\n          </p>\n        )}\n\n        {/* Metadata */}\n        <div className=\"space-y-2 text-xs text-muted-foreground\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-1\">\n              <Clock className=\"h-3 w-3\" />\n              {presentation.estimatedDuration || 15} min\n            </div>\n            <div className=\"flex items-center gap-1\">\n              <Calendar className=\"h-3 w-3\" />\n              {formatDistanceToNow(new Date(presentation.updatedAt), { addSuffix: true })}\n            </div>\n          </div>\n          \n          {presentation.targetAudience && (\n            <div className=\"flex items-center gap-1\">\n              <Users className=\"h-3 w-3\" />\n              <span className=\"truncate\">{presentation.targetAudience}</span>\n            </div>\n          )}\n        </div>\n\n        {/* Theme indicator */}\n        <div className=\"mt-3 pt-3 border-t\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"text-xs text-muted-foreground\">\n              Theme: {theme.name}\n            </div>\n            <div className=\"flex gap-1\">\n              <div \n                className=\"w-3 h-3 rounded-full\"\n                style={{ backgroundColor: (theme as any).colors.primary }}\n              />\n              <div \n                className=\"w-3 h-3 rounded-full\"\n                style={{ backgroundColor: (theme as any).colors.secondary }}\n              />\n              <div \n                className=\"w-3 h-3 rounded-full\"\n                style={{ backgroundColor: (theme as any).colors.accent }}\n              />\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default PresentationCard;\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport {\r\n  Plus,\r\n  FileText,\r\n  Presentation,\r\n  FileSpreadsheet,\r\n  FilePieChart,\r\n\r\n  Eye,\r\n  Edit,\r\n  Share,\r\n  Download,\r\n  Users,\r\n  BarChart3,\r\n  Sparkles,\r\n  Video,\r\n  MessageSquare,\r\n  UserPlus,\r\n  RefreshCw,\r\n  ChevronLeft,\r\n  Wand2,\r\n  Grid,\r\n  List,\r\n  TrendingUp\r\n} from \"lucide-react\";\r\nimport WorkspaceSidebar, { SidebarToggle } from \"@/components/WorkspaceSidebar\";\r\nimport DocumentModal from \"@/components/docs-decks/DocumentModal\";\r\nimport PitchDeckCard from \"@/components/docs-decks/PitchDeckCard\";\r\nimport DocumentCard from \"@/components/docs-decks/DocumentCard\";\r\nimport TemplateCard from \"@/components/docs-decks/TemplateCard\";\r\nimport EmptyState from \"@/components/docs-decks/EmptyState\";\r\nimport PresentationGenerator from \"@/components/presentation/PresentationGenerator\";\r\nimport PresentationCard from \"@/components/presentation/PresentationCard\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\n\r\nimport { docsDecksHelpers } from \"@/lib/supabase-connection-helpers\";\r\nimport { useAuth } from \"@/contexts/AuthContext\";\r\nimport { Input } from \"@/components/ui/input\";\r\n// Removed unused Badge and Progress imports\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter } from \"@/components/ui/dialog\";\r\nimport { Label } from \"@/components/ui/label\";\r\n// Removed unused Textarea import\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\n// Removed unused DropdownMenu imports\r\nimport { presentationService } from \"@/services/presentationService\";\r\nimport { Presentation as PresentationType } from \"@/types/presentation\";\r\n\r\nconst DocsDecks = () => {\r\n  const navigate = useNavigate();\r\n  const { toast } = useToast();\r\n  const { user } = useAuth();\r\n  const [activeTab, setActiveTab] = useState(\"presentations\");\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isGeneratorModalOpen, setIsGeneratorModalOpen] = useState(false);\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n  const [isCollaborationModalOpen, setIsCollaborationModalOpen] = useState(false);\r\n  const [isAnalyticsModalOpen, setIsAnalyticsModalOpen] = useState(false);\r\n  const [isVersionHistoryModalOpen, setIsVersionHistoryModalOpen] = useState(false);\r\n  const [isAIAssistantModalOpen, setIsAIAssistantModalOpen] = useState(false);\r\n  const [isGeneratingContent, setIsGeneratingContent] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedDocument, setSelectedDocument] = useState<PresentationType | null>(null);\r\n  const [viewMode, setViewMode] = useState<\"grid\" | \"list\">(\"grid\");\r\n\r\n  // Database state\r\n  const [presentations, setPresentations] = useState<PresentationType[]>([]);\r\n  const [pitchDecks, setPitchDecks] = useState<PresentationType[]>([]);\r\n  const [documents, setDocuments] = useState<PresentationType[]>([]);\r\n  \r\n  const templates = [\r\n    {\r\n      id: 1,\r\n      name: \"Investor Deck\",\r\n      description: \"Standard 10-12 slide investor pitch\",\r\n      category: \"Pitch Deck\",\r\n      icon: Presentation\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Executive Summary\",\r\n      description: \"One-page business overview\",\r\n      category: \"Document\",\r\n      icon: FileText\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Financial Model\",\r\n      description: \"Basic startup financial projection\",\r\n      category: \"Spreadsheet\",\r\n      icon: FileSpreadsheet\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Market Analysis\",\r\n      description: \"Industry research template\",\r\n      category: \"Research\",\r\n      icon: FilePieChart\r\n    }\r\n  ];\r\n\r\n  // Database helper functions\r\n  const loadPresentations = async () => {\r\n    if (!user) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      const { data, error } = await presentationService.getUserPresentations(user.id, {\r\n        limit: 50\r\n      });\r\n\r\n      if (error) throw error;\r\n\r\n      setPresentations(data || []);\r\n    } catch (error) {\r\n      console.error('Error loading presentations:', error);\r\n      toast({\r\n        title: \"Error Loading Presentations\",\r\n        description: \"Failed to load your presentations. Please try again.\",\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const loadDocuments = async () => {\r\n    if (!user) return;\r\n\r\n    try {\r\n      const { data, error } = await docsDecksHelpers.getDocuments(user.id);\r\n\r\n      if (error) throw error;\r\n\r\n      setDocuments(data || []);\r\n    } catch (error) {\r\n      console.error('Error loading documents:', error);\r\n      toast({\r\n        title: \"Error Loading Documents\",\r\n        description: \"Failed to load your documents. Please try again.\",\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const loadPitchDecks = async () => {\r\n    if (!user) return;\r\n\r\n    try {\r\n      const { data, error } = await docsDecksHelpers.getPitchDecks(user.id);\r\n\r\n      if (error) throw error;\r\n\r\n      setPitchDecks(data || []);\r\n    } catch (error: unknown) {\r\n      console.error('Error loading pitch decks:', error);\r\n    }\r\n  };\r\n\r\n  // Load data on component mount\r\n  React.useEffect(() => {\r\n    if (user) {\r\n      loadPresentations();\r\n      loadDocuments();\r\n      loadPitchDecks();\r\n    }\r\n  }, [user]);\r\n\r\n  const handleCreateDocument = async (data: { title: string; description: string; type: string }) => {\r\n    if (!user) return;\r\n\r\n    try {\r\n      if (data.type === \"deck\") {\r\n        // Create pitch deck\r\n        const { data: newDeck, error } = await docsDecksHelpers.createPitchDeck({\r\n          title: data.title,\r\n          content: data.description || '',\r\n          document_type: 'pitch_deck',\r\n          user_id: user.id\r\n        });\r\n\r\n        if (error) throw error;\r\n\r\n        if (newDeck) {\r\n          await loadPitchDecks();\r\n          navigate(`/workspace/docs-decks/editor/${newDeck.id}`);\r\n        }\r\n      } else {\r\n        // Create document\r\n        const { data: newDoc, error } = await docsDecksHelpers.createDocument({\r\n          title: data.title,\r\n          content: data.description || '',\r\n          document_type: 'other',\r\n          user_id: user.id\r\n        });\r\n\r\n        if (error) throw error;\r\n\r\n        if (newDoc) {\r\n          await loadDocuments();\r\n          navigate(`/workspace/docs-decks/editor/${newDoc.id}`);\r\n        }\r\n      }\r\n\r\n      toast({\r\n        title: \"Document created\",\r\n        description: `Your ${data.type === \"deck\" ? \"pitch deck\" : \"document\"} was created successfully`,\r\n      });\r\n    } catch (error: unknown) {\r\n      console.error('Error creating document:', error);\r\n      toast({\r\n        title: \"Error Creating Document\",\r\n        description: \"Failed to create document. Please try again.\",\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDeckClick = (id: number) => {\r\n    navigate(`/workspace/docs-decks/editor/${id}`);\r\n  };\r\n\r\n  const handleDocumentClick = (id: number) => {\r\n    navigate(`/workspace/docs-decks/editor/${id}`);\r\n  };\r\n\r\n  const handleCollaboration = (document: PresentationType) => {\r\n    setSelectedDocument(document);\r\n    setIsCollaborationModalOpen(true);\r\n  };\r\n\r\n  const handleAnalytics = (document: PresentationType) => {\r\n    setSelectedDocument(document);\r\n    setIsAnalyticsModalOpen(true);\r\n  };\r\n\r\n  const handleVersionHistory = (document: PresentationType) => {\r\n    setSelectedDocument(document);\r\n    setIsVersionHistoryModalOpen(true);\r\n  };\r\n\r\n  const handleAIAssistant = (document: PresentationType) => {\r\n    setSelectedDocument(document);\r\n    setIsAIAssistantModalOpen(true);\r\n  };\r\n\r\n  const handleGenerateContent = async (prompt: string) => {\r\n    setIsGeneratingContent(true);\r\n\r\n    // Simulate AI content generation\r\n    await new Promise(resolve => setTimeout(resolve, 3000));\r\n\r\n    setIsGeneratingContent(false);\r\n    toast({\r\n      title: \"Content Generated\",\r\n      description: \"AI has generated new content for your document.\",\r\n    });\r\n  };\r\n\r\n  const handleShare = (document: PresentationType) => {\r\n    navigator.clipboard.writeText(`https://app.example.com/share/${document.id}`);\r\n    toast({\r\n      title: \"Link copied\",\r\n      description: \"Share link copied to clipboard.\",\r\n    });\r\n  };\r\n\r\n  const handleDuplicate = (document: PresentationType) => {\r\n    toast({\r\n      title: \"Document duplicated\",\r\n      description: `${document.title} has been duplicated.`,\r\n    });\r\n  };\r\n\r\n  const handleOpenModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleOpenGeneratorModal = () => {\r\n    setIsGeneratorModalOpen(true);\r\n  };\r\n\r\n  // Presentation handlers\r\n  const handlePresentationClick = (presentation: PresentationType) => {\r\n    navigate(`/workspace/docs-decks/presentation/${presentation.id}`);\r\n  };\r\n\r\n  const handlePresentationEdit = (presentation: PresentationType) => {\r\n    navigate(`/workspace/docs-decks/presentation/${presentation.id}/edit`);\r\n  };\r\n\r\n  const handlePresentationDuplicate = async (presentation: PresentationType) => {\r\n    if (!user) return;\r\n\r\n    try {\r\n      const { data, error } = await presentationService.duplicatePresentation(\r\n        presentation.id,\r\n        user.id,\r\n        `${presentation.title} (Copy)`\r\n      );\r\n\r\n      if (error) throw error;\r\n\r\n      await loadPresentations();\r\n      toast({\r\n        title: \"Presentation Duplicated\",\r\n        description: `\"${presentation.title}\" has been duplicated successfully.`,\r\n      });\r\n    } catch (error: unknown) {\r\n      console.error('Error duplicating presentation:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to duplicate presentation. Please try again.\",\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const handlePresentationDelete = async (presentation: PresentationType) => {\r\n    if (!user) return;\r\n\r\n    try {\r\n      const { success, error } = await presentationService.deletePresentation(\r\n        presentation.id,\r\n        user.id\r\n      );\r\n\r\n      if (!success || error) throw error;\r\n\r\n      await loadPresentations();\r\n      toast({\r\n        title: \"Presentation Deleted\",\r\n        description: `\"${presentation.title}\" has been deleted.`,\r\n      });\r\n    } catch (error: unknown) {\r\n      console.error('Error deleting presentation:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to delete presentation. Please try again.\",\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const handlePresentationShare = (presentation: PresentationType) => {\r\n    const shareUrl = `${window.location.origin}/presentation/${presentation.id}`;\r\n    navigator.clipboard.writeText(shareUrl);\r\n    toast({\r\n      title: \"Link Copied\",\r\n      description: \"Presentation share link copied to clipboard.\",\r\n    });\r\n  };\r\n\r\n  const handlePresentationGenerated = async (presentationId: string) => {\r\n    setIsGeneratorModalOpen(false);\r\n    await loadPresentations();\r\n    navigate(`/workspace/docs-decks/presentation/${presentationId}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"layout-container bg-gradient-to-br from-black via-gray-900 to-green-950\">\r\n      <WorkspaceSidebar isOpen={sidebarOpen} setIsOpen={setSidebarOpen} />\r\n      <main className=\"layout-main transition-all duration-300\">\r\n        {/* Top Navigation Bar */}\r\n        <div className=\"sticky top-0 z-10 bg-black/80 backdrop-blur-xl border-b border-white/10\">\r\n          <div className=\"px-6 py-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center gap-4\">\r\n                <SidebarToggle onClick={() => setSidebarOpen(true)} />\r\n                <div className=\"flex items-center gap-2 text-gray-400 hover:text-white transition-colors text-sm\">\r\n                  <ChevronLeft className=\"h-4 w-4\" />\r\n                  <span>Back to Workspace</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex gap-2\">\r\n                <Button\r\n                  onClick={handleOpenGeneratorModal}\r\n                  className=\"bg-purple-600 hover:bg-purple-700\"\r\n                >\r\n                  <Wand2 className=\"h-4 w-4 mr-2\" />\r\n                  AI Presentation\r\n                </Button>\r\n                <Button\r\n                  onClick={handleOpenModal}\r\n                  className=\"bg-green-600 hover:bg-green-700\"\r\n                >\r\n                  <Plus className=\"h-4 w-4 mr-2\" />\r\n                  New Document\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Main Content */}\r\n        <div className=\"px-6 py-8\">\r\n          {/* Header Section */}\r\n          <div className=\"mb-8\">\r\n            <div className=\"flex items-center gap-3 mb-2\">\r\n              <FileText className=\"h-8 w-8 text-green-400\" />\r\n              <h1 className=\"text-3xl md:text-4xl font-bold text-white\">Docs & Decks</h1>\r\n            </div>\r\n            <p className=\"text-gray-400 text-lg\">\r\n              Create and manage your documents and presentations\r\n            </p>\r\n          </div>\r\n\r\n          {/* Main Content Container */}\r\n          <div className=\"bg-black/40 backdrop-blur-sm rounded-2xl border border-white/10 p-6\">\r\n            <header className=\"mb-6 md:mb-8\">\r\n            <h1 className=\"text-2xl md:text-3xl font-bold mb-2\">Docs & Decks</h1>\r\n            <p className=\"text-muted-foreground\">\r\n              Create professional documents and presentations for your startup\r\n            </p>\r\n          </header>\r\n          <div className=\"mb-6 md:mb-8 flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4 sm:gap-0\">\r\n            <div className=\"flex items-center gap-4\">\r\n              <h2 className=\"text-xl md:text-2xl font-semibold\">Document Center</h2>\r\n              <div className=\"flex items-center gap-2\">\r\n                <Button\r\n                  variant={viewMode === 'grid' ? 'default' : 'outline'}\r\n                  size=\"sm\"\r\n                  onClick={() => setViewMode('grid')}\r\n                >\r\n                  <Grid className=\"h-4 w-4\" />\r\n                </Button>\r\n                <Button\r\n                  variant={viewMode === 'list' ? 'default' : 'outline'}\r\n                  size=\"sm\"\r\n                  onClick={() => setViewMode('list')}\r\n                >\r\n                  <List className=\"h-4 w-4\" />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex gap-2\">\r\n              <Button onClick={handleOpenGeneratorModal} className=\"bg-purple-600 hover:bg-purple-700\">\r\n                <Wand2 className=\"h-4 w-4 mr-2\" />\r\n                AI Presentation\r\n              </Button>\r\n              <Button onClick={handleOpenModal} className=\"w-full sm:w-auto\">\r\n                <Plus className=\"h-4 w-4 mr-2\" />\r\n                New Document\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <Tabs\r\n            defaultValue=\"presentations\"\r\n            value={activeTab}\r\n            onValueChange={setActiveTab}\r\n            className=\"mb-6 md:mb-8\"\r\n          >\r\n            <TabsList className=\"mb-2 w-full sm:w-auto\">\r\n              <TabsTrigger\r\n                value=\"presentations\"\r\n                className={`transition-all duration-300 ${activeTab === \"presentations\" ? \"tab-active\" : \"\"}`}\r\n              >\r\n                <Sparkles className=\"h-4 w-4 mr-2\" />\r\n                AI Presentations\r\n              </TabsTrigger>\r\n              <TabsTrigger\r\n                value=\"pitch-decks\"\r\n                className={`transition-all duration-300 ${activeTab === \"pitch-decks\" ? \"tab-active\" : \"\"}`}\r\n              >\r\n                Pitch Decks\r\n              </TabsTrigger>\r\n              <TabsTrigger\r\n                value=\"documents\"\r\n                className={`transition-all duration-300 ${activeTab === \"documents\" ? \"tab-active\" : \"\"}`}\r\n              >\r\n                Documents\r\n              </TabsTrigger>\r\n              <TabsTrigger\r\n                value=\"templates\"\r\n                className={`transition-all duration-300 ${activeTab === \"templates\" ? \"tab-active\" : \"\"}`}\r\n              >\r\n                Templates\r\n              </TabsTrigger>\r\n            </TabsList>\r\n\r\n            <TabsContent value=\"presentations\" className=\"mt-4 md:mt-6 transition-all duration-300 animate-fade-in\">\r\n              {presentations.length > 0 ? (\r\n                <div className={viewMode === 'grid'\r\n                  ? \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-6\"\r\n                  : \"space-y-4\"\r\n                }>\r\n                  {presentations.map(presentation => (\r\n                    <PresentationCard\r\n                      key={presentation.id}\r\n                      presentation={presentation}\r\n                      viewMode={viewMode}\r\n                      onClick={() => handlePresentationClick(presentation)}\r\n                      onEdit={() => handlePresentationEdit(presentation)}\r\n                      onDuplicate={() => handlePresentationDuplicate(presentation)}\r\n                      onShare={() => handlePresentationShare(presentation)}\r\n                      onDelete={() => handlePresentationDelete(presentation)}\r\n                    />\r\n                  ))}\r\n\r\n                  {viewMode === 'grid' && (\r\n                    <div\r\n                      className=\"workspace-card border-dashed border-2 flex flex-col items-center justify-center cursor-pointer transition-all duration-200 hover:shadow-lg hover:border-purple-500/50\"\r\n                      onClick={handleOpenGeneratorModal}\r\n                    >\r\n                      <div className=\"flex flex-col items-center justify-center p-4 md:p-6 h-full\">\r\n                        <div className=\"rounded-full bg-purple-500/10 p-3 mb-4\">\r\n                          <Wand2 className=\"h-6 w-6 text-purple-500\" />\r\n                        </div>\r\n                        <p className=\"font-medium\">Generate with AI</p>\r\n                        <p className=\"text-sm text-muted-foreground text-center mt-2\">\r\n                          Create professional presentations with AI assistance\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-center py-12\">\r\n                  <div className=\"mx-auto w-24 h-24 bg-purple-100 rounded-full flex items-center justify-center mb-4\">\r\n                    <Sparkles className=\"h-12 w-12 text-purple-500\" />\r\n                  </div>\r\n                  <h3 className=\"text-lg font-semibold mb-2\">No presentations yet</h3>\r\n                  <p className=\"text-muted-foreground mb-6\">\r\n                    Create your first AI-powered presentation to get started\r\n                  </p>\r\n                  <Button onClick={handleOpenGeneratorModal} className=\"bg-purple-600 hover:bg-purple-700\">\r\n                    <Wand2 className=\"h-4 w-4 mr-2\" />\r\n                    Generate AI Presentation\r\n                  </Button>\r\n                </div>\r\n              )}\r\n            </TabsContent>\r\n\r\n            <TabsContent value=\"pitch-decks\" className=\"mt-4 md:mt-6 transition-all duration-300 animate-fade-in\">\r\n              {pitchDecks.length > 0 ? (\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-6\">\r\n                  {pitchDecks.map(deck => (\r\n                    <PitchDeckCard\r\n                      key={deck.id}\r\n                      id={parseInt(deck.id)}\r\n                      name={deck.title}\r\n                      description={deck.description || 'No description'}\r\n                      lastEdited={new Date(deck.updatedAt).toLocaleDateString()}\r\n                      slides={deck.totalSlides}\r\n                      template={deck.theme}\r\n                      onClick={() => handleDeckClick(parseInt(deck.id))}\r\n                    />\r\n                  ))}\r\n                  \r\n                  <div \r\n                    className=\"workspace-card border-dashed border-2 flex flex-col items-center justify-center cursor-pointer transition-all duration-200 hover:shadow-lg hover:border-primary/50\"\r\n                    onClick={handleOpenModal}\r\n                  >\r\n                    <div className=\"flex flex-col items-center justify-center p-4 md:p-6 h-full\">\r\n                      <div className=\"rounded-full bg-white/5 p-3 mb-4\">\r\n                        <Presentation className=\"h-6 w-6\" />\r\n                      </div>\r\n                      <p className=\"font-medium\">Create New Deck</p>\r\n                      <p className=\"text-sm text-muted-foreground text-center mt-2\">\r\n                        Build a professional pitch deck with AI assistance\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <EmptyState type=\"decks\" onCreateNew={handleOpenModal} />\r\n              )}\r\n            </TabsContent>\r\n            \r\n            <TabsContent value=\"documents\" className=\"mt-4 md:mt-6 transition-all duration-300 animate-fade-in\">\r\n              {documents.length > 0 ? (\r\n                <div className=\"space-y-4\">\r\n                  {documents.map(doc => (\r\n                    <DocumentCard\r\n                      key={doc.id}\r\n                      id={parseInt(doc.id)}\r\n                      name={doc.title}\r\n                      description={doc.description || 'No description'}\r\n                      type={doc.status}\r\n                      lastEdited={new Date(doc.updatedAt).toLocaleDateString()}\r\n                      pages={doc.totalSlides}\r\n                      onClick={() => handleDocumentClick(parseInt(doc.id))}\r\n                    />\r\n                  ))}\r\n                  \r\n                  <Button variant=\"outline\" className=\"w-full justify-center\" onClick={handleOpenModal}>\r\n                    <Plus className=\"h-4 w-4 mr-2\" />\r\n                    Create New Document\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n                <EmptyState type=\"documents\" onCreateNew={handleOpenModal} />\r\n              )}\r\n            </TabsContent>\r\n            \r\n            <TabsContent value=\"templates\" className=\"mt-4 md:mt-6 transition-all duration-300 animate-fade-in\">\r\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 md:gap-6\">\r\n                {templates.map(template => (\r\n                  <TemplateCard\r\n                    key={template.id}\r\n                    id={template.id}\r\n                    name={template.name}\r\n                    description={template.description}\r\n                    category={template.category}\r\n                    icon={template.icon}\r\n                  />\r\n                ))}\r\n              </div>\r\n              \r\n              <div className=\"mt-6 md:mt-8 p-4 md:p-6 glass-effect rounded-lg\">\r\n                <div className=\"flex items-center gap-4 mb-4\">\r\n                  <div className=\"h-10 w-10 rounded-full bg-primary/20 flex items-center justify-center\">\r\n                    <FileText className=\"h-5 w-5 text-primary\" />\r\n                  </div>\r\n                  <div>\r\n                    <h4 className=\"font-medium\">AI Document Generator</h4>\r\n                    <p className=\"text-sm text-muted-foreground\">Generate professional documents with AI assistance</p>\r\n                  </div>\r\n                </div>\r\n                <Button className=\"w-full mt-4\">Generate Document with AI</Button>\r\n              </div>\r\n            </TabsContent>\r\n          </Tabs>\r\n          \r\n          <DocumentModal\r\n            isOpen={isModalOpen}\r\n            onClose={() => setIsModalOpen(false)}\r\n            onSave={handleCreateDocument}\r\n          />\r\n\r\n        </div>\r\n\r\n          {/* AI Presentation Generator Modal */}\r\n          <Dialog open={isGeneratorModalOpen} onOpenChange={setIsGeneratorModalOpen}>\r\n            <DialogContent className=\"bg-black/90 backdrop-blur-xl border-white/10 text-white max-w-4xl max-h-[90vh] overflow-y-auto\">\r\n              <DialogHeader>\r\n                <DialogTitle className=\"flex items-center gap-2\">\r\n                  <Wand2 className=\"h-5 w-5 text-purple-400\" />\r\n                  AI Presentation Generator\r\n                </DialogTitle>\r\n              </DialogHeader>\r\n\r\n              <div className=\"py-4\">\r\n                <PresentationGenerator\r\n                  onPresentationGenerated={handlePresentationGenerated}\r\n                />\r\n              </div>\r\n            </DialogContent>\r\n          </Dialog>\r\n\r\n          {/* Collaboration Modal */}\r\n          <Dialog open={isCollaborationModalOpen} onOpenChange={setIsCollaborationModalOpen}>\r\n            <DialogContent className=\"bg-black/90 backdrop-blur-xl border-white/10 text-white max-w-2xl\">\r\n              <DialogHeader>\r\n                <DialogTitle className=\"flex items-center gap-2\">\r\n                  <Users className=\"h-5 w-5 text-green-400\" />\r\n                  Collaboration Settings\r\n                </DialogTitle>\r\n              </DialogHeader>\r\n\r\n              {selectedDocument && (\r\n                <div className=\"space-y-6\">\r\n                  <div>\r\n                    <h3 className=\"font-semibold text-lg mb-2\">{selectedDocument.title}</h3>\r\n                    <p className=\"text-gray-400\">{selectedDocument.description}</p>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <Label className=\"text-sm font-medium\">Current Collaborators</Label>\r\n                    <div className=\"space-y-2 mt-2\">\r\n                      <div className=\"text-sm text-muted-foreground\">No collaborators added yet</div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <Label className=\"text-sm font-medium\">Invite New Collaborator</Label>\r\n                    <div className=\"flex gap-2 mt-2\">\r\n                      <Input\r\n                        placeholder=\"Enter email address\"\r\n                        className=\"bg-black/20 border-white/10\"\r\n                      />\r\n                      <Select defaultValue=\"editor\">\r\n                        <SelectTrigger className=\"w-32 bg-black/20 border-white/10\">\r\n                          <SelectValue />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          <SelectItem value=\"viewer\">Viewer</SelectItem>\r\n                          <SelectItem value=\"editor\">Editor</SelectItem>\r\n                          <SelectItem value=\"admin\">Admin</SelectItem>\r\n                        </SelectContent>\r\n                      </Select>\r\n                      <Button>\r\n                        <UserPlus className=\"h-4 w-4 mr-2\" />\r\n                        Invite\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"bg-green-500/10 rounded-lg p-4 border border-green-500/20\">\r\n                    <h4 className=\"font-medium text-green-400 mb-2\">Real-time Features</h4>\r\n                    <div className=\"space-y-2 text-sm text-gray-300\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <Video className=\"h-4 w-4 text-blue-400\" />\r\n                        <span>Video calling during editing</span>\r\n                      </div>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <MessageSquare className=\"h-4 w-4 text-purple-400\" />\r\n                        <span>Live comments and suggestions</span>\r\n                      </div>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <RefreshCw className=\"h-4 w-4 text-yellow-400\" />\r\n                        <span>Auto-sync changes</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <DialogFooter>\r\n                <Button variant=\"outline\" onClick={() => setIsCollaborationModalOpen(false)}>\r\n                  Close\r\n                </Button>\r\n                <Button onClick={() => {\r\n                  toast({\r\n                    title: \"Settings Updated\",\r\n                    description: \"Collaboration settings have been saved.\",\r\n                  });\r\n                  setIsCollaborationModalOpen(false);\r\n                }}>\r\n                  Save Changes\r\n                </Button>\r\n              </DialogFooter>\r\n            </DialogContent>\r\n          </Dialog>\r\n\r\n          {/* Analytics Modal */}\r\n          <Dialog open={isAnalyticsModalOpen} onOpenChange={setIsAnalyticsModalOpen}>\r\n            <DialogContent className=\"bg-black/90 backdrop-blur-xl border-white/10 text-white max-w-4xl\">\r\n              <DialogHeader>\r\n                <DialogTitle className=\"flex items-center gap-2\">\r\n                  <BarChart3 className=\"h-5 w-5 text-green-400\" />\r\n                  Document Analytics\r\n                </DialogTitle>\r\n              </DialogHeader>\r\n\r\n              {selectedDocument && (\r\n                <div className=\"space-y-6\">\r\n                  <div>\r\n                    <h3 className=\"font-semibold text-lg mb-2\">{selectedDocument.title}</h3>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n                      <div className=\"bg-black/40 rounded-lg p-4 text-center\">\r\n                        <div className=\"text-2xl font-bold text-green-400\">\r\n                          0\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-400\">Total Views</div>\r\n                      </div>\r\n                      <div className=\"bg-black/40 rounded-lg p-4 text-center\">\r\n                        <div className=\"text-2xl font-bold text-blue-400\">\r\n                          0\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-400\">Unique Viewers</div>\r\n                      </div>\r\n                      <div className=\"bg-black/40 rounded-lg p-4 text-center\">\r\n                        <div className=\"text-2xl font-bold text-yellow-400\">\r\n                          0:00\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-400\">Avg. Time Spent</div>\r\n                      </div>\r\n                      <div className=\"bg-black/40 rounded-lg p-4 text-center\">\r\n                        <div className=\"text-2xl font-bold text-purple-400\">\r\n                          0%\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-400\">Completion Rate</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                    <div>\r\n                      <h4 className=\"font-medium mb-3\">Engagement Over Time</h4>\r\n                      <div className=\"bg-black/40 rounded-lg p-4 h-48 flex items-center justify-center\">\r\n                        <div className=\"text-center text-gray-400\">\r\n                          <TrendingUp className=\"h-8 w-8 mx-auto mb-2\" />\r\n                          <p>Chart visualization would go here</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <h4 className=\"font-medium mb-3\">Recent Activity</h4>\r\n                      <div className=\"space-y-2\">\r\n                        <div className=\"flex items-center gap-3 bg-black/40 rounded-lg p-3\">\r\n                          <Eye className=\"h-4 w-4 text-green-400\" />\r\n                          <div className=\"text-sm\">Viewed by investor@fund.com</div>\r\n                          <div className=\"text-xs text-gray-400 ml-auto\">2 hours ago</div>\r\n                        </div>\r\n                        <div className=\"flex items-center gap-3 bg-black/40 rounded-lg p-3\">\r\n                          <Share className=\"h-4 w-4 text-blue-400\" />\r\n                          <div className=\"text-sm\">Shared with team</div>\r\n                          <div className=\"text-xs text-gray-400 ml-auto\">Yesterday</div>\r\n                        </div>\r\n                        <div className=\"flex items-center gap-3 bg-black/40 rounded-lg p-3\">\r\n                          <Edit className=\"h-4 w-4 text-yellow-400\" />\r\n                          <div className=\"text-sm\">Last edited by you</div>\r\n                          <div className=\"text-xs text-gray-400 ml-auto\">2 days ago</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <DialogFooter>\r\n                <Button variant=\"outline\" onClick={() => setIsAnalyticsModalOpen(false)}>\r\n                  Close\r\n                </Button>\r\n                <Button onClick={() => {\r\n                  toast({\r\n                    title: \"Report Exported\",\r\n                    description: \"Analytics report has been downloaded.\",\r\n                  });\r\n                }}>\r\n                  <Download className=\"h-4 w-4 mr-2\" />\r\n                  Export Report\r\n                </Button>\r\n              </DialogFooter>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DocsDecks;\r\n","/**\n * Beta Label Component\n * A small, reusable beta indicator for specific features or sections\n */\n\nimport React from 'react';\nimport { Badge } from '@/components/ui/badge';\nimport { cn } from '@/lib/utils';\n\ninterface BetaLabelProps {\n  className?: string;\n  variant?: 'default' | 'secondary' | 'outline' | 'destructive';\n  size?: 'sm' | 'default' | 'lg';\n  text?: string;\n  pulse?: boolean;\n}\n\nexport function BetaLabel({ \n  className,\n  variant = 'default',\n  size = 'sm',\n  text = 'BETA',\n  pulse = false\n}: BetaLabelProps) {\n  return (\n    <Badge \n      variant={variant}\n      className={cn(\n        'font-semibold tracking-wide',\n        size === 'sm' && 'text-xs px-1.5 py-0.5',\n        size === 'default' && 'text-sm px-2 py-1',\n        size === 'lg' && 'text-base px-3 py-1.5',\n        pulse && 'animate-pulse',\n        variant === 'default' && 'bg-blue-600/20 text-blue-300 border-blue-600/40 hover:bg-blue-600/30',\n        variant === 'secondary' && 'bg-yellow-600/20 text-yellow-300 border-yellow-600/40 hover:bg-yellow-600/30',\n        variant === 'outline' && 'bg-green-600/20 text-green-300 border-green-600/40 hover:bg-green-600/30',\n        variant === 'destructive' && 'bg-red-600/20 text-red-300 border-red-600/40 hover:bg-red-600/30',\n        className\n      )}\n    >\n      {text}\n    </Badge>\n  );\n}\n\nexport default BetaLabel;\n","import React, { useEffect } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport {\r\n  LayoutDashboard,\r\n  Lightbulb,\r\n  Code,\r\n  Users,\r\n  Search,\r\n  Brain,\r\n  MessageSquare,\r\n  X,\r\n  FileText,\r\n  Menu,\r\n  Target,\r\n  Shield\r\n} from \"lucide-react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Sheet, SheetContent } from \"@/components/ui/sheet\";\r\nimport { useAdmin } from \"@/contexts/AdminContext\";\r\nimport { BetaLabel } from \"@/components/ui/beta-label\";\r\n\r\ninterface SidebarItemProps {\r\n  icon: React.ElementType;\r\n  label: string;\r\n  path: string;\r\n  isActive: boolean;\r\n  onClick?: () => void;\r\n  isBeta?: boolean;\r\n  betaVariant?: 'default' | 'secondary' | 'outline' | 'destructive';\r\n}\r\n\r\nconst SidebarItem = ({ icon: Icon, label, path, isActive, onClick, isBeta, betaVariant = 'default' }: SidebarItemProps) => {\r\n  return (\r\n    <Link\r\n      to={path}\r\n      onClick={onClick}\r\n      className={`flex items-center gap-3 w-full px-3 py-2 rounded-md text-sm transition-all duration-200 ${\r\n        isActive\r\n          ? \"bg-green-600/20 text-green-400 border-l-2 border-green-400\"\r\n          : \"text-gray-400 hover:bg-black/30 hover:text-white hover:border-l-2 hover:border-green-500/50\"\r\n      }`}\r\n    >\r\n      <Icon className=\"h-5 w-5\" />\r\n      <span className=\"flex-1\">{label}</span>\r\n      {isBeta && (\r\n        <BetaLabel\r\n          variant={betaVariant}\r\n          size=\"sm\"\r\n          className=\"ml-auto\"\r\n        />\r\n      )}\r\n    </Link>\r\n  );\r\n};\r\n\r\ninterface WorkspaceSidebarProps {\r\n  isOpen?: boolean;\r\n  setIsOpen?: (open: boolean) => void;\r\n}\r\n\r\nconst WorkspaceSidebar = ({ isOpen = false, setIsOpen = () => {} }: WorkspaceSidebarProps) => {\r\n  const location = useLocation();\r\n  const currentPath = location.pathname;\r\n\r\n  const { isAdmin } = useAdmin();\r\n\r\n  const handleLinkClick = () => {\r\n    if (setIsOpen) {\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  // Close sidebar when route changes\r\n  useEffect(() => {\r\n    if (setIsOpen) {\r\n      setIsOpen(false);\r\n    }\r\n  }, [location.pathname, setIsOpen]);\r\n\r\n  const modules = [\r\n    { id: \"dashboard\", name: \"Dashboard\", icon: LayoutDashboard, path: \"/workspace\" },\r\n    { id: \"idea-vault\", name: \"Idea Vault\", icon: Lightbulb, path: \"/workspace/idea-vault\" },\r\n    { id: \"ideaforge\", name: \"IdeaForge\", icon: Target, path: \"/workspace/ideaforge\", isBeta: true, betaVariant: 'secondary' as const },\r\n    { id: \"mvp-studio\", name: \"MVP Studio\", icon: Code, path: \"/workspace/mvp-studio\" },\r\n    { id: \"ai-tools\", name: \"AI Tools Hub\", icon: Brain, path: \"/workspace/ai-tools\" },\r\n    { id: \"docs-decks\", name: \"Docs & Decks\", icon: FileText, path: \"/workspace/docs-decks\" },\r\n    { id: \"teamspace\", name: \"TeamSpace\", icon: Users, path: \"/workspace/teamspace\", isBeta: true, betaVariant: 'secondary' as const },\r\n    { id: \"investor-radar\", name: \"Investor Radar\", icon: Search, path: \"/workspace/investor-radar\", isBeta: true, betaVariant: 'secondary' as const },\r\n  ];\r\n\r\n  const sidebarContent = (\r\n    <div className=\"h-full flex flex-col workspace-sidebar\">\r\n      <div className=\"p-4 flex items-center border-b border-white/10\">\r\n        <div className=\"flex items-center gap-2\">\r\n          <div className=\"rounded-full bg-gradient-to-br from-green-500 to-green-600 w-8 h-8 flex items-center justify-center\">\r\n            <span className=\"font-bold text-white text-sm\">SW</span>\r\n          </div>\r\n          <div className=\"flex flex-col gap-1\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <span className=\"font-bold text-lg text-white\">StartWise</span>\r\n              <Badge\r\n                variant=\"secondary\"\r\n                className=\"bg-blue-600/20 text-blue-300 border-blue-600/40 text-xs font-semibold\"\r\n              >\r\n                BETA\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"px-2 py-4 flex-1 overflow-y-auto\">\r\n        <nav className=\"space-y-1\">\r\n          {modules.map((module) => (\r\n            <SidebarItem\r\n              key={module.id}\r\n              icon={module.icon}\r\n              label={module.name}\r\n              path={module.path}\r\n              onClick={handleLinkClick}\r\n              isBeta={module.isBeta}\r\n              betaVariant={module.betaVariant}\r\n              isActive={\r\n                module.path === \"/workspace\"\r\n                  ? currentPath === \"/workspace\"\r\n                  : currentPath.startsWith(module.path)\r\n              }\r\n            />\r\n          ))}\r\n\r\n          {/* Admin Panel Link - Only visible to admin users */}\r\n          {isAdmin && (\r\n            <>\r\n              <div className=\"my-4 border-t border-white/10\"></div>\r\n              <SidebarItem\r\n                icon={Shield}\r\n                label=\"Admin Panel\"\r\n                path=\"/admin\"\r\n                onClick={handleLinkClick}\r\n                isActive={currentPath.startsWith(\"/admin\")}\r\n              />\r\n            </>\r\n          )}\r\n        </nav>\r\n      </div>\r\n      <div className=\"p-4 border-t border-white/10\">\r\n        <div className=\"workspace-card p-4\">\r\n          <div className=\"flex items-center gap-2 mb-3\">\r\n            <div className=\"p-1.5 bg-green-500/20 rounded\">\r\n              <MessageSquare className=\"h-4 w-4 text-green-400\" />\r\n            </div>\r\n            <h4 className=\"text-sm font-medium text-white\">Founder's GPT</h4>\r\n          </div>\r\n          <p className=\"text-xs text-gray-400 mb-3\">\r\n            Get advice on your startup journey from your AI co-founder\r\n          </p>\r\n          <button className=\"w-full bg-black/50 hover:bg-black/70 px-3 py-2 rounded text-xs text-left text-gray-300 hover:text-white transition-colors border border-white/10\">\r\n            Ask Founder's GPT...\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // Use Sheet for both mobile and desktop for consistent off-canvas behavior\r\n  return (\r\n    <Sheet open={isOpen} onOpenChange={setIsOpen || (() => {})}>\r\n      <SheetContent\r\n        side=\"left\"\r\n        className=\"w-64 bg-black/95 backdrop-blur-xl border-r border-white/10 p-0 text-white\"\r\n      >\r\n        {sidebarContent}\r\n      </SheetContent>\r\n    </Sheet>\r\n  );\r\n};\r\n\r\n// Hamburger Menu Button Component\r\ninterface SidebarToggleProps {\r\n  onClick: () => void;\r\n  className?: string;\r\n}\r\n\r\nexport const SidebarToggle = ({ onClick, className }: SidebarToggleProps) => {\r\n  return (\r\n    <Button\r\n      variant=\"ghost\"\r\n      size=\"icon\"\r\n      className={`text-gray-400 hover:text-white hover:bg-black/30 ${className}`}\r\n      onClick={onClick}\r\n    >\r\n      <Menu className=\"h-5 w-5\" />\r\n      <span className=\"sr-only\">Toggle Sidebar</span>\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default WorkspaceSidebar;\r\n"],"names":["blueprintZoneHelpers","blueprintZoneHelpersOriginal","investorRadarHelpers","async","getInvestors","userId","filters","allHelpers","investorRadar","createInvestor","data","updateInvestor","id","deleteInvestor","getFundingRounds","pitchPerfectHelpers","getPitchScripts","scriptType","pitchPerfect","createPitchScript","getPitchDecks","deckType","createPitchDeck","getPitchVideos","videoType","createPitchVideo","taskPlannerHelpers","getTasks","taskPlanner","createTask","updateTask","deleteTask","getProjects","createProject","docsDecksHelpers","ideaForgeHelpers","mvpStudioHelpers","workspaceHelpers","ideaVaultHelpers","teamSpaceHelpers","onboardingHelpers","profileHelpers","adminHelpers","subscriptionHelpers","_ref","isOpen","onClose","onSave","title","setTitle","useState","description","setDescription","docType","setDocType","toast","useToast","_jsx","Dialog","open","onOpenChange","children","_jsxs","DialogContent","className","DialogHeader","DialogTitle","onSubmit","e","preventDefault","trim","type","variant","Button","onClick","Presentation","FileText","FilePieChart","Label","htmlFor","Input","value","onChange","target","placeholder","DialogFooter","name","lastEdited","slides","template","Card","CardHeader","CardTitle","TooltipProvider","Tooltip","TooltipTrigger","asChild","size","stopPropagation","navigator","clipboard","writeText","concat","Copy","TooltipContent","Download","CardContent","pages","FileSpreadsheet","icon","Icon","onCreateNew","Plus","usePresentationStore","create","set","get","currentPresentationId","currentPresentation","isGridView","isSheetOpen","isPresenting","currentSlideIndex","isThemeCreatorOpen","shouldShowExitHeader","isGeneratingOutline","isGeneratingPresentation","generationProgress","presentationInput","numSlides","theme","customThemeData","language","pageStyle","presentationStyle","imageModel","isSelecting","selectedPresentations","savingStatus","setCurrentPresentation","presentation","setCurrentPresentationId","setIsGridView","isGrid","setIsSheetOpen","setIsPresenting","setCurrentSlideIndex","index","setIsThemeCreatorOpen","setShouldShowExitHeader","show","setIsGeneratingOutline","isGenerating","setIsGeneratingPresentation","setGenerationProgress","progress","startOutlineGeneration","stage","currentSlide","totalSlides","message","startPresentationGeneration","resetGeneration","setPresentationInput","input","setNumSlides","num","setTheme","arguments","length","undefined","setLanguage","setPageStyle","style","setPresentationStyle","setImageModel","model","toggleSelecting","state","selectAllPresentations","ids","deselectAllPresentations","togglePresentationSelection","includes","filter","p","setSavingStatus","status","nextSlide","_state$currentPresent","Math","min","previousSlide","max","goToSlide","_state$currentPresent2","addSlide","slide","insertIndex","splice","_objectSpread","removeSlide","slideId","s","updateSlide","updates","map","reorderSlides","fromIndex","toIndex","movedSlide","forEach","order","onPresentationGenerated","ideaId","navigate","useNavigate","user","useAuth","targetAudience","setTargetAudience","objectives","setObjectives","duration","setDuration","step","setStep","Wand2","Progress","Loader2","Clock","Sparkles","Textarea","rows","Select","toString","onValueChange","parseInt","SelectTrigger","SelectValue","SelectContent","SelectItem","mins","Separator","Target","Palette","themeList","slice","themeOption","backgroundColor","colors","primary","request","topic","split","o","error","presentationService","generatePresentationFromAI","current","total","Error","savedPresentation","saveError","saveGeneratedPresentation","console","disabled","_Fragment","ArrowRight","onEdit","onDuplicate","onShare","onDelete","onDownload","viewMode","isSelected","onSelect","getTheme","customTheme","handleCardClick","closest","getStatusColor","checked","Badge","outline","estimatedDuration","Calendar","formatDistanceToNow","Date","updatedAt","addSuffix","Users","Eye","DropdownMenu","DropdownMenuTrigger","MoreHorizontal","DropdownMenuContent","align","DropdownMenuItem","Edit","Share","DropdownMenuSeparator","Trash2","background","secondary","accent","DocsDecks","activeTab","setActiveTab","isModalOpen","setIsModalOpen","isGeneratorModalOpen","setIsGeneratorModalOpen","sidebarOpen","setSidebarOpen","isCollaborationModalOpen","setIsCollaborationModalOpen","isAnalyticsModalOpen","setIsAnalyticsModalOpen","isVersionHistoryModalOpen","setIsVersionHistoryModalOpen","isAIAssistantModalOpen","setIsAIAssistantModalOpen","isGeneratingContent","setIsGeneratingContent","loading","setLoading","selectedDocument","setSelectedDocument","setViewMode","presentations","setPresentations","pitchDecks","setPitchDecks","documents","setDocuments","templates","category","loadPresentations","getUserPresentations","limit","loadDocuments","getDocuments","loadPitchDecks","React","handleOpenModal","handleOpenGeneratorModal","WorkspaceSidebar","setIsOpen","SidebarToggle","ChevronLeft","Grid","List","Tabs","defaultValue","TabsList","TabsTrigger","TabsContent","PresentationCard","handlePresentationClick","handlePresentationEdit","duplicatePresentation","handlePresentationDuplicate","shareUrl","window","location","origin","handlePresentationShare","success","deletePresentation","handlePresentationDelete","deck","PitchDeckCard","toLocaleDateString","handleDeckClick","EmptyState","doc","DocumentCard","handleDocumentClick","TemplateCard","DocumentModal","newDeck","content","document_type","user_id","newDoc","createDocument","PresentationGenerator","presentationId","UserPlus","Video","MessageSquare","RefreshCw","BarChart3","TrendingUp","BetaLabel","text","pulse","cn","SidebarItem","label","path","isActive","isBeta","betaVariant","Link","to","_ref3","Menu","_ref2","useLocation","currentPath","pathname","isAdmin","useAdmin","handleLinkClick","useEffect","modules","LayoutDashboard","Lightbulb","Code","Brain","Search","sidebarContent","module","startsWith","Shield","Sheet","SheetContent","side"],"sourceRoot":""}